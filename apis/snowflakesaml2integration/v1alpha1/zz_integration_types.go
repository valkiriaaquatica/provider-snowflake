// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowedEmailPatternsInitParameters struct {
}

type AllowedEmailPatternsObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowedEmailPatternsParameters struct {
}

type AllowedUserDomainsInitParameters struct {
}

type AllowedUserDomainsObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowedUserDomainsParameters struct {
}

type CommentInitParameters struct {
}

type CommentObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CommentParameters struct {
}

type DescribeOutputInitParameters struct {
}

type DescribeOutputObservation struct {

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	AllowedEmailPatterns []AllowedEmailPatternsObservation `json:"allowedEmailPatterns,omitempty" tf:"allowed_email_patterns,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	AllowedUserDomains []AllowedUserDomainsObservation `json:"allowedUserDomains,omitempty" tf:"allowed_user_domains,omitempty"`

	// (String) Specifies a comment for the integration.
	Comment []CommentObservation `json:"comment,omitempty" tf:"comment,omitempty"`

	// (List of Object) (see below for nested schema)
	Saml2DigestMethodsUsed []Saml2DigestMethodsUsedObservation `json:"saml2DigestMethodsUsed,omitempty" tf:"saml2_digest_methods_used,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2EnableSpInitiated []Saml2EnableSpInitiatedObservation `json:"saml2EnableSpInitiated,omitempty" tf:"saml2_enable_sp_initiated,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2ForceAuthn []Saml2ForceAuthnObservation `json:"saml2ForceAuthn,omitempty" tf:"saml2_force_authn,omitempty"`

	// (String) The string containing the IdP EntityID / Issuer.
	Saml2Issuer []Saml2IssuerObservation `json:"saml2Issuer,omitempty" tf:"saml2_issuer,omitempty"`

	// (String) The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	Saml2PostLogoutRedirectURL []Saml2PostLogoutRedirectURLObservation `json:"saml2PostLogoutRedirectUrl,omitempty" tf:"saml2_post_logout_redirect_url,omitempty"`

	// (String) The string describing the IdP. Valid options are: OKTA | ADFS | CUSTOM.
	Saml2Provider []Saml2ProviderObservation `json:"saml2Provider,omitempty" tf:"saml2_provider,omitempty"`

	// format:unspecified | urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress | urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName | urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName | urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos | urn:oasis:names:tc:SAML:2.0:nameid-format:persistent | urn:oasis:names:tc:SAML:2.0:nameid-format:transient.
	Saml2RequestedNameidFormat []Saml2RequestedNameidFormatObservation `json:"saml2RequestedNameidFormat,omitempty" tf:"saml2_requested_nameid_format,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2SignRequest []Saml2SignRequestObservation `json:"saml2SignRequest,omitempty" tf:"saml2_sign_request,omitempty"`

	// (List of Object) (see below for nested schema)
	Saml2SignatureMethodsUsed []Saml2SignatureMethodsUsedObservation `json:"saml2SignatureMethodsUsed,omitempty" tf:"saml2_signature_methods_used,omitempty"`

	// (String) The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	Saml2SnowflakeAcsURL []Saml2SnowflakeAcsURLObservation `json:"saml2SnowflakeAcsUrl,omitempty" tf:"saml2_snowflake_acs_url,omitempty"`

	// (String) The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	Saml2SnowflakeIssuerURL []Saml2SnowflakeIssuerURLObservation `json:"saml2SnowflakeIssuerUrl,omitempty" tf:"saml2_snowflake_issuer_url,omitempty"`

	// (List of Object) (see below for nested schema)
	Saml2SnowflakeMetadata []Saml2SnowflakeMetadataObservation `json:"saml2SnowflakeMetadata,omitempty" tf:"saml2_snowflake_metadata,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	Saml2SpInitiatedLoginPageLabel []Saml2SpInitiatedLoginPageLabelObservation `json:"saml2SpInitiatedLoginPageLabel,omitempty" tf:"saml2_sp_initiated_login_page_label,omitempty"`

	// (String) The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	Saml2SsoURL []Saml2SsoURLObservation `json:"saml2SsoUrl,omitempty" tf:"saml2_sso_url,omitempty"`
}

type DescribeOutputParameters struct {
}

type IntegrationInitParameters struct {

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of regular expressions that email addresses are matched against to authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +listType=set
	AllowedEmailPatterns []*string `json:"allowedEmailPatterns,omitempty" tf:"allowed_email_patterns,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of email domains that can authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +listType=set
	AllowedUserDomains []*string `json:"allowedUserDomains,omitempty" tf:"allowed_user_domains,omitempty"`

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2EnableSpInitiated *string `json:"saml2EnableSpInitiated,omitempty" tf:"saml2_enable_sp_initiated,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2ForceAuthn *string `json:"saml2ForceAuthn,omitempty" tf:"saml2_force_authn,omitempty"`

	// (String) The string containing the IdP EntityID / Issuer.
	// The string containing the IdP EntityID / Issuer.
	Saml2Issuer *string `json:"saml2Issuer,omitempty" tf:"saml2_issuer,omitempty"`

	// (String) The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	// The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	Saml2PostLogoutRedirectURL *string `json:"saml2PostLogoutRedirectUrl,omitempty" tf:"saml2_post_logout_redirect_url,omitempty"`

	// (String) The string describing the IdP. Valid options are: OKTA | ADFS | CUSTOM.
	// The string describing the IdP. Valid options are: `OKTA` | `ADFS` | `CUSTOM`.
	Saml2Provider *string `json:"saml2Provider,omitempty" tf:"saml2_provider,omitempty"`

	// format:unspecified | urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress | urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName | urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName | urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos | urn:oasis:names:tc:SAML:2.0:nameid-format:persistent | urn:oasis:names:tc:SAML:2.0:nameid-format:transient.
	// The SAML NameID format allows Snowflake to set an expectation of the identifying attribute of the user (i.e. SAML Subject) in the SAML assertion from the IdP to ensure a valid authentication to Snowflake. Valid options are: `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified` | `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` | `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` | `urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName` | `urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos` | `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` | `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
	Saml2RequestedNameidFormat *string `json:"saml2RequestedNameidFormat,omitempty" tf:"saml2_requested_nameid_format,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2SignRequest *string `json:"saml2SignRequest,omitempty" tf:"saml2_sign_request,omitempty"`

	// (String) The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	Saml2SnowflakeAcsURL *string `json:"saml2SnowflakeAcsUrl,omitempty" tf:"saml2_snowflake_acs_url,omitempty"`

	// (String) The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	Saml2SnowflakeIssuerURL *string `json:"saml2SnowflakeIssuerUrl,omitempty" tf:"saml2_snowflake_issuer_url,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// The string containing the label to display after the Log In With button on the login page. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	Saml2SpInitiatedLoginPageLabel *string `json:"saml2SpInitiatedLoginPageLabel,omitempty" tf:"saml2_sp_initiated_login_page_label,omitempty"`

	// (String) The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	// The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	Saml2SsoURL *string `json:"saml2SsoUrl,omitempty" tf:"saml2_sso_url,omitempty"`

	// ----BEGIN CERTIFICATE----- and ending -----END CERTIFICATE----- markers.
	// The Base64 encoded IdP signing certificate on a single line without the leading -----BEGIN CERTIFICATE----- and ending -----END CERTIFICATE----- markers.
	Saml2X509CertSecretRef v1.SecretKeySelector `json:"saml2X509CertSecretRef" tf:"-"`
}

type IntegrationObservation struct {

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of regular expressions that email addresses are matched against to authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +listType=set
	AllowedEmailPatterns []*string `json:"allowedEmailPatterns,omitempty" tf:"allowed_email_patterns,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of email domains that can authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +listType=set
	AllowedUserDomains []*string `json:"allowedUserDomains,omitempty" tf:"allowed_user_domains,omitempty"`

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (List of Object) Outputs the result of DESCRIBE SECURITY INTEGRATION for the given integration. (see below for nested schema)
	// Outputs the result of `DESCRIBE SECURITY INTEGRATION` for the given integration.
	DescribeOutput []DescribeOutputObservation `json:"describeOutput,omitempty" tf:"describe_output,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Fully qualified name of the resource. For more information, see object name resolution.
	// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
	FullyQualifiedName *string `json:"fullyQualifiedName,omitempty" tf:"fully_qualified_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2EnableSpInitiated *string `json:"saml2EnableSpInitiated,omitempty" tf:"saml2_enable_sp_initiated,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2ForceAuthn *string `json:"saml2ForceAuthn,omitempty" tf:"saml2_force_authn,omitempty"`

	// (String) The string containing the IdP EntityID / Issuer.
	// The string containing the IdP EntityID / Issuer.
	Saml2Issuer *string `json:"saml2Issuer,omitempty" tf:"saml2_issuer,omitempty"`

	// (String) The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	// The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	Saml2PostLogoutRedirectURL *string `json:"saml2PostLogoutRedirectUrl,omitempty" tf:"saml2_post_logout_redirect_url,omitempty"`

	// (String) The string describing the IdP. Valid options are: OKTA | ADFS | CUSTOM.
	// The string describing the IdP. Valid options are: `OKTA` | `ADFS` | `CUSTOM`.
	Saml2Provider *string `json:"saml2Provider,omitempty" tf:"saml2_provider,omitempty"`

	// format:unspecified | urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress | urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName | urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName | urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos | urn:oasis:names:tc:SAML:2.0:nameid-format:persistent | urn:oasis:names:tc:SAML:2.0:nameid-format:transient.
	// The SAML NameID format allows Snowflake to set an expectation of the identifying attribute of the user (i.e. SAML Subject) in the SAML assertion from the IdP to ensure a valid authentication to Snowflake. Valid options are: `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified` | `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` | `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` | `urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName` | `urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos` | `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` | `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
	Saml2RequestedNameidFormat *string `json:"saml2RequestedNameidFormat,omitempty" tf:"saml2_requested_nameid_format,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Saml2SignRequest *string `json:"saml2SignRequest,omitempty" tf:"saml2_sign_request,omitempty"`

	// (String) The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	Saml2SnowflakeAcsURL *string `json:"saml2SnowflakeAcsUrl,omitempty" tf:"saml2_snowflake_acs_url,omitempty"`

	// (String) The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	Saml2SnowflakeIssuerURL *string `json:"saml2SnowflakeIssuerUrl,omitempty" tf:"saml2_snowflake_issuer_url,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// The string containing the label to display after the Log In With button on the login page. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	Saml2SpInitiatedLoginPageLabel *string `json:"saml2SpInitiatedLoginPageLabel,omitempty" tf:"saml2_sp_initiated_login_page_label,omitempty"`

	// (String) The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	// The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	Saml2SsoURL *string `json:"saml2SsoUrl,omitempty" tf:"saml2_sso_url,omitempty"`

	// (List of Object) Outputs the result of SHOW SECURITY INTEGRATION for the given integration. (see below for nested schema)
	// Outputs the result of `SHOW SECURITY INTEGRATION` for the given integration.
	ShowOutput []ShowOutputObservation `json:"showOutput,omitempty" tf:"show_output,omitempty"`
}

type IntegrationParameters struct {

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of regular expressions that email addresses are matched against to authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowedEmailPatterns []*string `json:"allowedEmailPatterns,omitempty" tf:"allowed_email_patterns,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// A list of email domains that can authenticate with a SAML2 security integration. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowedUserDomains []*string `json:"allowedUserDomains,omitempty" tf:"allowed_user_domains,omitempty"`

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating if the Log In With button will be shown on the login page. TRUE: displays the Log in With button on the login page. FALSE: does not display the Log in With button on the login page. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	Saml2EnableSpInitiated *string `json:"saml2EnableSpInitiated,omitempty" tf:"saml2_enable_sp_initiated,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether users, during the initial authentication flow, are forced to authenticate again to access Snowflake. When set to TRUE, Snowflake sets the ForceAuthn SAML parameter to TRUE in the outgoing request from Snowflake to the identity provider. TRUE: forces users to authenticate again to access Snowflake, even if a valid session with the identity provider exists. FALSE: does not force users to authenticate again to access Snowflake. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	Saml2ForceAuthn *string `json:"saml2ForceAuthn,omitempty" tf:"saml2_force_authn,omitempty"`

	// (String) The string containing the IdP EntityID / Issuer.
	// The string containing the IdP EntityID / Issuer.
	// +kubebuilder:validation:Optional
	Saml2Issuer *string `json:"saml2Issuer,omitempty" tf:"saml2_issuer,omitempty"`

	// (String) The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	// The endpoint to which Snowflake redirects users after clicking the Log Out button in the classic Snowflake web interface. Snowflake terminates the Snowflake session upon redirecting to the specified endpoint.
	// +kubebuilder:validation:Optional
	Saml2PostLogoutRedirectURL *string `json:"saml2PostLogoutRedirectUrl,omitempty" tf:"saml2_post_logout_redirect_url,omitempty"`

	// (String) The string describing the IdP. Valid options are: OKTA | ADFS | CUSTOM.
	// The string describing the IdP. Valid options are: `OKTA` | `ADFS` | `CUSTOM`.
	// +kubebuilder:validation:Optional
	Saml2Provider *string `json:"saml2Provider,omitempty" tf:"saml2_provider,omitempty"`

	// format:unspecified | urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress | urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName | urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName | urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos | urn:oasis:names:tc:SAML:2.0:nameid-format:persistent | urn:oasis:names:tc:SAML:2.0:nameid-format:transient.
	// The SAML NameID format allows Snowflake to set an expectation of the identifying attribute of the user (i.e. SAML Subject) in the SAML assertion from the IdP to ensure a valid authentication to Snowflake. Valid options are: `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified` | `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` | `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` | `urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName` | `urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos` | `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` | `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
	// +kubebuilder:validation:Optional
	Saml2RequestedNameidFormat *string `json:"saml2RequestedNameidFormat,omitempty" tf:"saml2_requested_nameid_format,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) The Boolean indicating whether SAML requests are signed. TRUE: allows SAML requests to be signed. FALSE: does not allow SAML requests to be signed. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	Saml2SignRequest *string `json:"saml2SignRequest,omitempty" tf:"saml2_sign_request,omitempty"`

	// (String) The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the Snowflake Assertion Consumer Service URL to which the IdP will send its SAML authentication response back to Snowflake. This property will be set in the SAML authentication request generated by Snowflake when initiating a SAML SSO operation with the IdP. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	// +kubebuilder:validation:Optional
	Saml2SnowflakeAcsURL *string `json:"saml2SnowflakeAcsUrl,omitempty" tf:"saml2_snowflake_acs_url,omitempty"`

	// (String) The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See docs.
	// The string containing the EntityID / Issuer for the Snowflake service provider. If an incorrect value is specified, Snowflake returns an error message indicating the acceptable values to use. Because Okta does not support underscores in URLs, the underscore in the account name must be converted to a hyphen. See [docs](https://docs.snowflake.com/en/user-guide/organizations-connect#okta-urls).
	// +kubebuilder:validation:Optional
	Saml2SnowflakeIssuerURL *string `json:"saml2SnowflakeIssuerUrl,omitempty" tf:"saml2_snowflake_issuer_url,omitempty"`

	// empty to empty, the whole resource is recreated because of Snowflake limitations.
	// The string containing the label to display after the Log In With button on the login page. If this field changes value from non-empty to empty, the whole resource is recreated because of Snowflake limitations.
	// +kubebuilder:validation:Optional
	Saml2SpInitiatedLoginPageLabel *string `json:"saml2SpInitiatedLoginPageLabel,omitempty" tf:"saml2_sp_initiated_login_page_label,omitempty"`

	// (String) The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	// The string containing the IdP SSO URL, where the user should be redirected by Snowflake (the Service Provider) with a SAML AuthnRequest message.
	// +kubebuilder:validation:Optional
	Saml2SsoURL *string `json:"saml2SsoUrl,omitempty" tf:"saml2_sso_url,omitempty"`

	// ----BEGIN CERTIFICATE----- and ending -----END CERTIFICATE----- markers.
	// The Base64 encoded IdP signing certificate on a single line without the leading -----BEGIN CERTIFICATE----- and ending -----END CERTIFICATE----- markers.
	// +kubebuilder:validation:Optional
	Saml2X509CertSecretRef v1.SecretKeySelector `json:"saml2X509CertSecretRef" tf:"-"`
}

type Saml2DigestMethodsUsedInitParameters struct {
}

type Saml2DigestMethodsUsedObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2DigestMethodsUsedParameters struct {
}

type Saml2EnableSpInitiatedInitParameters struct {
}

type Saml2EnableSpInitiatedObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2EnableSpInitiatedParameters struct {
}

type Saml2ForceAuthnInitParameters struct {
}

type Saml2ForceAuthnObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2ForceAuthnParameters struct {
}

type Saml2IssuerInitParameters struct {
}

type Saml2IssuerObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2IssuerParameters struct {
}

type Saml2PostLogoutRedirectURLInitParameters struct {
}

type Saml2PostLogoutRedirectURLObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2PostLogoutRedirectURLParameters struct {
}

type Saml2ProviderInitParameters struct {
}

type Saml2ProviderObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2ProviderParameters struct {
}

type Saml2RequestedNameidFormatInitParameters struct {
}

type Saml2RequestedNameidFormatObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2RequestedNameidFormatParameters struct {
}

type Saml2SignRequestInitParameters struct {
}

type Saml2SignRequestObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SignRequestParameters struct {
}

type Saml2SignatureMethodsUsedInitParameters struct {
}

type Saml2SignatureMethodsUsedObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SignatureMethodsUsedParameters struct {
}

type Saml2SnowflakeAcsURLInitParameters struct {
}

type Saml2SnowflakeAcsURLObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SnowflakeAcsURLParameters struct {
}

type Saml2SnowflakeIssuerURLInitParameters struct {
}

type Saml2SnowflakeIssuerURLObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SnowflakeIssuerURLParameters struct {
}

type Saml2SnowflakeMetadataInitParameters struct {
}

type Saml2SnowflakeMetadataObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SnowflakeMetadataParameters struct {
}

type Saml2SpInitiatedLoginPageLabelInitParameters struct {
}

type Saml2SpInitiatedLoginPageLabelObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SpInitiatedLoginPageLabelParameters struct {
}

type Saml2SsoURLInitParameters struct {
}

type Saml2SsoURLObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type Saml2SsoURLParameters struct {
}

type ShowOutputInitParameters struct {
}

type ShowOutputObservation struct {

	// (String)
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// (String) Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this security integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	IntegrationType *string `json:"integrationType,omitempty" tf:"integration_type,omitempty"`

	// (String) Specifies the name of the SAML2 integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ShowOutputParameters struct {
}

// IntegrationSpec defines the desired state of Integration
type IntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IntegrationInitParameters `json:"initProvider,omitempty"`
}

// IntegrationStatus defines the observed state of Integration.
type IntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Integration is the Schema for the Integrations API. Resource used to manage SAML2 security integration objects. For more information, check security integrations documentation https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-saml2.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type Integration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.saml2Issuer) || (has(self.initProvider) && has(self.initProvider.saml2Issuer))",message="spec.forProvider.saml2Issuer is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.saml2Provider) || (has(self.initProvider) && has(self.initProvider.saml2Provider))",message="spec.forProvider.saml2Provider is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.saml2SsoUrl) || (has(self.initProvider) && has(self.initProvider.saml2SsoUrl))",message="spec.forProvider.saml2SsoUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.saml2X509CertSecretRef)",message="spec.forProvider.saml2X509CertSecretRef is a required parameter"
	Spec   IntegrationSpec   `json:"spec"`
	Status IntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IntegrationList contains a list of Integrations
type IntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Integration `json:"items"`
}

// Repository type metadata.
var (
	Integration_Kind             = "Integration"
	Integration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Integration_Kind}.String()
	Integration_KindAPIVersion   = Integration_Kind + "." + CRDGroupVersion.String()
	Integration_GroupVersionKind = CRDGroupVersion.WithKind(Integration_Kind)
)

func init() {
	SchemeBuilder.Register(&Integration{}, &IntegrationList{})
}
