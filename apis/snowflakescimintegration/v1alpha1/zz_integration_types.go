// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CommentInitParameters struct {
}

type CommentObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CommentParameters struct {
}

type DescribeOutputInitParameters struct {
}

type DescribeOutputObservation struct {

	// (String) Specifies a comment for the integration.
	Comment []CommentObservation `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specify whether the security integration is enabled.
	Enabled []EnabledObservation `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
	NetworkPolicy []NetworkPolicyObservation `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// (String) Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: OKTA_PROVISIONER | AAD_PROVISIONER | GENERIC_SCIM_PROVISIONER.
	RunAsRole []RunAsRoleObservation `json:"runAsRole,omitempty" tf:"run_as_role,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	SyncPassword []SyncPasswordObservation `json:"syncPassword,omitempty" tf:"sync_password,omitempty"`
}

type DescribeOutputParameters struct {
}

type EnabledInitParameters struct {
}

type EnabledObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnabledParameters struct {
}

type IntegrationInitParameters struct {

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specify whether the security integration is enabled.
	// Specify whether the security integration is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
	// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see [docs](./network_policy).
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// (String) Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: OKTA_PROVISIONER | AAD_PROVISIONER | GENERIC_SCIM_PROVISIONER.
	// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
	RunAsRole *string `json:"runAsRole,omitempty" tf:"run_as_role,omitempty"`

	// (String) Specifies the client type for the scim integration. Valid options are: OKTA | AZURE | GENERIC.
	// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
	ScimClient *string `json:"scimClient,omitempty" tf:"scim_client,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	SyncPassword *string `json:"syncPassword,omitempty" tf:"sync_password,omitempty"`
}

type IntegrationObservation struct {

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (List of Object) Outputs the result of DESCRIBE SECURITY INTEGRATIONS for the given security integration. (see below for nested schema)
	// Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
	DescribeOutput []DescribeOutputObservation `json:"describeOutput,omitempty" tf:"describe_output,omitempty"`

	// (Boolean) Specify whether the security integration is enabled.
	// Specify whether the security integration is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Fully qualified name of the resource. For more information, see object name resolution.
	// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
	FullyQualifiedName *string `json:"fullyQualifiedName,omitempty" tf:"fully_qualified_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
	// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see [docs](./network_policy).
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// (String) Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: OKTA_PROVISIONER | AAD_PROVISIONER | GENERIC_SCIM_PROVISIONER.
	// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
	RunAsRole *string `json:"runAsRole,omitempty" tf:"run_as_role,omitempty"`

	// (String) Specifies the client type for the scim integration. Valid options are: OKTA | AZURE | GENERIC.
	// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
	ScimClient *string `json:"scimClient,omitempty" tf:"scim_client,omitempty"`

	// (List of Object) Outputs the result of SHOW SECURITY INTEGRATIONS for the given security integration. (see below for nested schema)
	// Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
	ShowOutput []ShowOutputObservation `json:"showOutput,omitempty" tf:"show_output,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	SyncPassword *string `json:"syncPassword,omitempty" tf:"sync_password,omitempty"`
}

type IntegrationParameters struct {

	// (String) Specifies a comment for the integration.
	// Specifies a comment for the integration.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specify whether the security integration is enabled.
	// Specify whether the security integration is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
	// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see [docs](./network_policy).
	// +kubebuilder:validation:Optional
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// (String) Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: OKTA_PROVISIONER | AAD_PROVISIONER | GENERIC_SCIM_PROVISIONER.
	// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
	// +kubebuilder:validation:Optional
	RunAsRole *string `json:"runAsRole,omitempty" tf:"run_as_role,omitempty"`

	// (String) Specifies the client type for the scim integration. Valid options are: OKTA | AZURE | GENERIC.
	// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
	// +kubebuilder:validation:Optional
	ScimClient *string `json:"scimClient,omitempty" tf:"scim_client,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	SyncPassword *string `json:"syncPassword,omitempty" tf:"sync_password,omitempty"`
}

type NetworkPolicyInitParameters struct {
}

type NetworkPolicyObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkPolicyParameters struct {
}

type RunAsRoleInitParameters struct {
}

type RunAsRoleObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RunAsRoleParameters struct {
}

type ShowOutputInitParameters struct {
}

type ShowOutputObservation struct {

	// (String)
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// (String) Specifies a comment for the integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (Boolean) Specify whether the security integration is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	IntegrationType *string `json:"integrationType,omitempty" tf:"integration_type,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ShowOutputParameters struct {
}

type SyncPasswordInitParameters struct {
}

type SyncPasswordObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SyncPasswordParameters struct {
}

// IntegrationSpec defines the desired state of Integration
type IntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IntegrationInitParameters `json:"initProvider,omitempty"`
}

// IntegrationStatus defines the observed state of Integration.
type IntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Integration is the Schema for the Integrations API. Resource used to manage scim security integration objects. For more information, check security integrations documentation https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-scim.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type Integration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.runAsRole) || (has(self.initProvider) && has(self.initProvider.runAsRole))",message="spec.forProvider.runAsRole is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scimClient) || (has(self.initProvider) && has(self.initProvider.scimClient))",message="spec.forProvider.scimClient is a required parameter"
	Spec   IntegrationSpec   `json:"spec"`
	Status IntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IntegrationList contains a list of Integrations
type IntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Integration `json:"items"`
}

// Repository type metadata.
var (
	Integration_Kind             = "Integration"
	Integration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Integration_Kind}.String()
	Integration_KindAPIVersion   = Integration_Kind + "." + CRDGroupVersion.String()
	Integration_GroupVersionKind = CRDGroupVersion.WithKind(Integration_Kind)
)

func init() {
	SchemeBuilder.Register(&Integration{}, &IntegrationList{})
}
