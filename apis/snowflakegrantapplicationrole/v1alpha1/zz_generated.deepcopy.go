//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRole) DeepCopyInto(out *ApplicationRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRole.
func (in *ApplicationRole) DeepCopy() *ApplicationRole {
	if in == nil {
		return nil
	}
	out := new(ApplicationRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleInitParameters) DeepCopyInto(out *ApplicationRoleInitParameters) {
	*out = *in
	if in.ApplicationName != nil {
		in, out := &in.ApplicationName, &out.ApplicationName
		*out = new(string)
		**out = **in
	}
	if in.ApplicationRoleName != nil {
		in, out := &in.ApplicationRoleName, &out.ApplicationRoleName
		*out = new(string)
		**out = **in
	}
	if in.ParentAccountRoleName != nil {
		in, out := &in.ParentAccountRoleName, &out.ParentAccountRoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleInitParameters.
func (in *ApplicationRoleInitParameters) DeepCopy() *ApplicationRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleList) DeepCopyInto(out *ApplicationRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleList.
func (in *ApplicationRoleList) DeepCopy() *ApplicationRoleList {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleObservation) DeepCopyInto(out *ApplicationRoleObservation) {
	*out = *in
	if in.ApplicationName != nil {
		in, out := &in.ApplicationName, &out.ApplicationName
		*out = new(string)
		**out = **in
	}
	if in.ApplicationRoleName != nil {
		in, out := &in.ApplicationRoleName, &out.ApplicationRoleName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ParentAccountRoleName != nil {
		in, out := &in.ParentAccountRoleName, &out.ParentAccountRoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleObservation.
func (in *ApplicationRoleObservation) DeepCopy() *ApplicationRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleParameters) DeepCopyInto(out *ApplicationRoleParameters) {
	*out = *in
	if in.ApplicationName != nil {
		in, out := &in.ApplicationName, &out.ApplicationName
		*out = new(string)
		**out = **in
	}
	if in.ApplicationRoleName != nil {
		in, out := &in.ApplicationRoleName, &out.ApplicationRoleName
		*out = new(string)
		**out = **in
	}
	if in.ParentAccountRoleName != nil {
		in, out := &in.ParentAccountRoleName, &out.ParentAccountRoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleParameters.
func (in *ApplicationRoleParameters) DeepCopy() *ApplicationRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleSpec) DeepCopyInto(out *ApplicationRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleSpec.
func (in *ApplicationRoleSpec) DeepCopy() *ApplicationRoleSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRoleStatus) DeepCopyInto(out *ApplicationRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRoleStatus.
func (in *ApplicationRoleStatus) DeepCopy() *ApplicationRoleStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationRoleStatus)
	in.DeepCopyInto(out)
	return out
}
