//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInitParameters) DeepCopyInto(out *AllInitParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInitParameters.
func (in *AllInitParameters) DeepCopy() *AllInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllObservation) DeepCopyInto(out *AllObservation) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllObservation.
func (in *AllObservation) DeepCopy() *AllObservation {
	if in == nil {
		return nil
	}
	out := new(AllObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllParameters) DeepCopyInto(out *AllParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllParameters.
func (in *AllParameters) DeepCopy() *AllParameters {
	if in == nil {
		return nil
	}
	out := new(AllParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureInitParameters) DeepCopyInto(out *FutureInitParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureInitParameters.
func (in *FutureInitParameters) DeepCopy() *FutureInitParameters {
	if in == nil {
		return nil
	}
	out := new(FutureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureObservation) DeepCopyInto(out *FutureObservation) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureObservation.
func (in *FutureObservation) DeepCopy() *FutureObservation {
	if in == nil {
		return nil
	}
	out := new(FutureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureParameters) DeepCopyInto(out *FutureParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureParameters.
func (in *FutureParameters) DeepCopy() *FutureParameters {
	if in == nil {
		return nil
	}
	out := new(FutureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnInitParameters) DeepCopyInto(out *OnInitParameters) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnInitParameters.
func (in *OnInitParameters) DeepCopy() *OnInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnObservation) DeepCopyInto(out *OnObservation) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnObservation.
func (in *OnObservation) DeepCopy() *OnObservation {
	if in == nil {
		return nil
	}
	out := new(OnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnParameters) DeepCopyInto(out *OnParameters) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnParameters.
func (in *OnParameters) DeepCopy() *OnParameters {
	if in == nil {
		return nil
	}
	out := new(OnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ownership) DeepCopyInto(out *Ownership) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ownership.
func (in *Ownership) DeepCopy() *Ownership {
	if in == nil {
		return nil
	}
	out := new(Ownership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ownership) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipInitParameters) DeepCopyInto(out *OwnershipInitParameters) {
	*out = *in
	if in.AccountRoleName != nil {
		in, out := &in.AccountRoleName, &out.AccountRoleName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]OnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundPrivileges != nil {
		in, out := &in.OutboundPrivileges, &out.OutboundPrivileges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipInitParameters.
func (in *OwnershipInitParameters) DeepCopy() *OwnershipInitParameters {
	if in == nil {
		return nil
	}
	out := new(OwnershipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipList) DeepCopyInto(out *OwnershipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ownership, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipList.
func (in *OwnershipList) DeepCopy() *OwnershipList {
	if in == nil {
		return nil
	}
	out := new(OwnershipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OwnershipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipObservation) DeepCopyInto(out *OwnershipObservation) {
	*out = *in
	if in.AccountRoleName != nil {
		in, out := &in.AccountRoleName, &out.AccountRoleName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]OnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundPrivileges != nil {
		in, out := &in.OutboundPrivileges, &out.OutboundPrivileges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipObservation.
func (in *OwnershipObservation) DeepCopy() *OwnershipObservation {
	if in == nil {
		return nil
	}
	out := new(OwnershipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipParameters) DeepCopyInto(out *OwnershipParameters) {
	*out = *in
	if in.AccountRoleName != nil {
		in, out := &in.AccountRoleName, &out.AccountRoleName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]OnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundPrivileges != nil {
		in, out := &in.OutboundPrivileges, &out.OutboundPrivileges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipParameters.
func (in *OwnershipParameters) DeepCopy() *OwnershipParameters {
	if in == nil {
		return nil
	}
	out := new(OwnershipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipSpec) DeepCopyInto(out *OwnershipSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipSpec.
func (in *OwnershipSpec) DeepCopy() *OwnershipSpec {
	if in == nil {
		return nil
	}
	out := new(OwnershipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipStatus) DeepCopyInto(out *OwnershipStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipStatus.
func (in *OwnershipStatus) DeepCopy() *OwnershipStatus {
	if in == nil {
		return nil
	}
	out := new(OwnershipStatus)
	in.DeepCopyInto(out)
	return out
}
