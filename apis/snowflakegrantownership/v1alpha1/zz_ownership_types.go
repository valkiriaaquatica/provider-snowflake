// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllInitParameters struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	ObjectTypePlural *string `json:"objectTypePlural,omitempty" tf:"object_type_plural,omitempty"`
}

type AllObservation struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	ObjectTypePlural *string `json:"objectTypePlural,omitempty" tf:"object_type_plural,omitempty"`
}

type AllParameters struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	// +kubebuilder:validation:Optional
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	// +kubebuilder:validation:Optional
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	// +kubebuilder:validation:Optional
	ObjectTypePlural *string `json:"objectTypePlural" tf:"object_type_plural,omitempty"`
}

type FutureInitParameters struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	ObjectTypePlural *string `json:"objectTypePlural,omitempty" tf:"object_type_plural,omitempty"`
}

type FutureObservation struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	ObjectTypePlural *string `json:"objectTypePlural,omitempty" tf:"object_type_plural,omitempty"`
}

type FutureParameters struct {

	// (String) The fully qualified name of the database. For more information about this resource, see docs.
	// The fully qualified name of the database. For more information about this resource, see [docs](./database).
	// +kubebuilder:validation:Optional
	InDatabase *string `json:"inDatabase,omitempty" tf:"in_database,omitempty"`

	// (String) The fully qualified name of the schema. For more information about this resource, see docs.
	// The fully qualified name of the schema. For more information about this resource, see [docs](./schema).
	// +kubebuilder:validation:Optional
	InSchema *string `json:"inSchema,omitempty" tf:"in_schema,omitempty"`

	// (String) Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to Snowflake documentation.
	// Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | RESOURCE MONITORS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
	// +kubebuilder:validation:Optional
	ObjectTypePlural *string `json:"objectTypePlural" tf:"object_type_plural,omitempty"`
}

type OnInitParameters struct {

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	All []AllInitParameters `json:"all,omitempty" tf:"all,omitempty"`

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	Future []FutureInitParameters `json:"future,omitempty" tf:"future,omitempty"`

	// (String) Specifies the identifier for the object on which you are transferring ownership.
	// Specifies the identifier for the object on which you are transferring ownership.
	ObjectName *string `json:"objectName,omitempty" tf:"object_name,omitempty"`

	// (String) Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	// Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type OnObservation struct {

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	All []AllObservation `json:"all,omitempty" tf:"all,omitempty"`

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	Future []FutureObservation `json:"future,omitempty" tf:"future,omitempty"`

	// (String) Specifies the identifier for the object on which you are transferring ownership.
	// Specifies the identifier for the object on which you are transferring ownership.
	ObjectName *string `json:"objectName,omitempty" tf:"object_name,omitempty"`

	// (String) Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	// Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type OnParameters struct {

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	// +kubebuilder:validation:Optional
	All []AllParameters `json:"all,omitempty" tf:"all,omitempty"`

	// (Block List, Max: 1) Configures the privilege to be granted on all objects in either a database or schema. (see below for nested schema)
	// Configures the privilege to be granted on all objects in either a database or schema.
	// +kubebuilder:validation:Optional
	Future []FutureParameters `json:"future,omitempty" tf:"future,omitempty"`

	// (String) Specifies the identifier for the object on which you are transferring ownership.
	// Specifies the identifier for the object on which you are transferring ownership.
	// +kubebuilder:validation:Optional
	ObjectName *string `json:"objectName,omitempty" tf:"object_name,omitempty"`

	// (String) Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	// Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`
}

type OwnershipInitParameters struct {

	// (String) The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see [docs](./account_role).
	AccountRoleName *string `json:"accountRoleName,omitempty" tf:"account_role_name,omitempty"`

	// (String) The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see [docs](./database_role).
	DatabaseRoleName *string `json:"databaseRoleName,omitempty" tf:"database_role_name,omitempty"`

	// (Block List, Min: 1, Max: 1) Configures which object(s) should transfer their ownership to the specified role. (see below for nested schema)
	// Configures which object(s) should transfer their ownership to the specified role.
	On []OnInitParameters `json:"on,omitempty" tf:"on,omitempty"`

	// field is set to COPY.
	// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to a new role. Available options are: REVOKE for removing existing privileges and COPY to transfer them with ownership. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#optional-parameters).
	OutboundPrivileges *string `json:"outboundPrivileges,omitempty" tf:"outbound_privileges,omitempty"`
}

type OwnershipObservation struct {

	// (String) The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see [docs](./account_role).
	AccountRoleName *string `json:"accountRoleName,omitempty" tf:"account_role_name,omitempty"`

	// (String) The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see [docs](./database_role).
	DatabaseRoleName *string `json:"databaseRoleName,omitempty" tf:"database_role_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Configures which object(s) should transfer their ownership to the specified role. (see below for nested schema)
	// Configures which object(s) should transfer their ownership to the specified role.
	On []OnObservation `json:"on,omitempty" tf:"on,omitempty"`

	// field is set to COPY.
	// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to a new role. Available options are: REVOKE for removing existing privileges and COPY to transfer them with ownership. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#optional-parameters).
	OutboundPrivileges *string `json:"outboundPrivileges,omitempty" tf:"outbound_privileges,omitempty"`
}

type OwnershipParameters struct {

	// (String) The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the account role to which privileges will be granted. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	AccountRoleName *string `json:"accountRoleName,omitempty" tf:"account_role_name,omitempty"`

	// (String) The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database role to which privileges will be granted. For more information about this resource, see [docs](./database_role).
	// +kubebuilder:validation:Optional
	DatabaseRoleName *string `json:"databaseRoleName,omitempty" tf:"database_role_name,omitempty"`

	// (Block List, Min: 1, Max: 1) Configures which object(s) should transfer their ownership to the specified role. (see below for nested schema)
	// Configures which object(s) should transfer their ownership to the specified role.
	// +kubebuilder:validation:Optional
	On []OnParameters `json:"on,omitempty" tf:"on,omitempty"`

	// field is set to COPY.
	// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to a new role. Available options are: REVOKE for removing existing privileges and COPY to transfer them with ownership. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#optional-parameters).
	// +kubebuilder:validation:Optional
	OutboundPrivileges *string `json:"outboundPrivileges,omitempty" tf:"outbound_privileges,omitempty"`
}

// OwnershipSpec defines the desired state of Ownership
type OwnershipSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OwnershipParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OwnershipInitParameters `json:"initProvider,omitempty"`
}

// OwnershipStatus defines the observed state of Ownership.
type OwnershipStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OwnershipObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Ownership is the Schema for the Ownerships API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type Ownership struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.on) || (has(self.initProvider) && has(self.initProvider.on))",message="spec.forProvider.on is a required parameter"
	Spec   OwnershipSpec   `json:"spec"`
	Status OwnershipStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OwnershipList contains a list of Ownerships
type OwnershipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Ownership `json:"items"`
}

// Repository type metadata.
var (
	Ownership_Kind             = "Ownership"
	Ownership_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Ownership_Kind}.String()
	Ownership_KindAPIVersion   = Ownership_Kind + "." + CRDGroupVersion.String()
	Ownership_GroupVersionKind = CRDGroupVersion.WithKind(Ownership_Kind)
)

func init() {
	SchemeBuilder.Register(&Ownership{}, &OwnershipList{})
}
