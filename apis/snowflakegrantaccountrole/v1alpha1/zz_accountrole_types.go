// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountRoleInitParameters struct {

	// child relationship between the roles. For more information about this resource, see docs.
	// The fully qualified name of the parent role which will create a parent-child relationship between the roles. For more information about this resource, see [docs](./account_role).
	ParentRoleName *string `json:"parentRoleName,omitempty" tf:"parent_role_name,omitempty"`

	// (String) The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see docs.
	// The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see [docs](./account_role).
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// (String) The fully qualified name of the user on which specified role will be granted. For more information about this resource, see docs.
	// The fully qualified name of the user on which specified role will be granted. For more information about this resource, see [docs](./user).
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AccountRoleObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// child relationship between the roles. For more information about this resource, see docs.
	// The fully qualified name of the parent role which will create a parent-child relationship between the roles. For more information about this resource, see [docs](./account_role).
	ParentRoleName *string `json:"parentRoleName,omitempty" tf:"parent_role_name,omitempty"`

	// (String) The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see docs.
	// The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see [docs](./account_role).
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// (String) The fully qualified name of the user on which specified role will be granted. For more information about this resource, see docs.
	// The fully qualified name of the user on which specified role will be granted. For more information about this resource, see [docs](./user).
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AccountRoleParameters struct {

	// child relationship between the roles. For more information about this resource, see docs.
	// The fully qualified name of the parent role which will create a parent-child relationship between the roles. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	ParentRoleName *string `json:"parentRoleName,omitempty" tf:"parent_role_name,omitempty"`

	// (String) The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see docs.
	// The fully qualified name of the role which will be granted to the user or parent role. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// (String) The fully qualified name of the user on which specified role will be granted. For more information about this resource, see docs.
	// The fully qualified name of the user on which specified role will be granted. For more information about this resource, see [docs](./user).
	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

// AccountRoleSpec defines the desired state of AccountRole
type AccountRoleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountRoleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountRoleInitParameters `json:"initProvider,omitempty"`
}

// AccountRoleStatus defines the observed state of AccountRole.
type AccountRoleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountRoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccountRole is the Schema for the AccountRoles API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type AccountRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.roleName) || (has(self.initProvider) && has(self.initProvider.roleName))",message="spec.forProvider.roleName is a required parameter"
	Spec   AccountRoleSpec   `json:"spec"`
	Status AccountRoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountRoleList contains a list of AccountRoles
type AccountRoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccountRole `json:"items"`
}

// Repository type metadata.
var (
	AccountRole_Kind             = "AccountRole"
	AccountRole_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccountRole_Kind}.String()
	AccountRole_KindAPIVersion   = AccountRole_Kind + "." + CRDGroupVersion.String()
	AccountRole_GroupVersionKind = CRDGroupVersion.WithKind(AccountRole_Kind)
)

func init() {
	SchemeBuilder.Register(&AccountRole{}, &AccountRoleList{})
}
