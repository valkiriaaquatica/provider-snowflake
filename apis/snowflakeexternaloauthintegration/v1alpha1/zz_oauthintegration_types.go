// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CommentInitParameters struct {
}

type CommentObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CommentParameters struct {
}

type DescribeOutputInitParameters struct {
}

type DescribeOutputObservation struct {

	// (String) Specifies a comment for the OAuth integration.
	Comment []CommentObservation `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specifies whether to initiate operation of the integration or suspend it.
	Enabled []EnabledObservation `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Set of String) Specifies the list of roles that the client can set as the primary role. For more information about this resource, see docs.
	ExternalOauthAllowedRolesList []ExternalOauthAllowedRolesListObservation `json:"externalOauthAllowedRolesList,omitempty" tf:"external_oauth_allowed_roles_list,omitempty"`

	// insensitive): DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE.
	ExternalOauthAnyRoleMode []ExternalOauthAnyRoleModeObservation `json:"externalOauthAnyRoleMode,omitempty" tf:"external_oauth_any_role_mode,omitempty"`

	// (Set of String) Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	ExternalOauthAudienceList []ExternalOauthAudienceListObservation `json:"externalOauthAudienceList,omitempty" tf:"external_oauth_audience_list,omitempty"`

	// (Set of String) Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	ExternalOauthBlockedRolesList []ExternalOauthBlockedRolesListObservation `json:"externalOauthBlockedRolesList,omitempty" tf:"external_oauth_blocked_roles_list,omitempty"`

	// (String) Specifies the URL to define the OAuth 2.0 authorization server.
	ExternalOauthIssuer []ExternalOauthIssuerObservation `json:"externalOauthIssuer,omitempty" tf:"external_oauth_issuer,omitempty"`

	// (Set of String) Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	ExternalOauthJwsKeysURL []ExternalOauthJwsKeysURLObservation `json:"externalOauthJwsKeysUrl,omitempty" tf:"external_oauth_jws_keys_url,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey []ExternalOauthRsaPublicKeyObservation `json:"externalOauthRsaPublicKey,omitempty" tf:"external_oauth_rsa_public_key,omitempty"`

	// ----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey2 []ExternalOauthRsaPublicKey2Observation `json:"externalOauthRsaPublicKey2,omitempty" tf:"external_oauth_rsa_public_key_2,omitempty"`

	// (String) Specifies the scope delimiter in the authorization token.
	ExternalOauthScopeDelimiter []ExternalOauthScopeDelimiterObservation `json:"externalOauthScopeDelimiter,omitempty" tf:"external_oauth_scope_delimiter,omitempty"`

	// insensitive): LOGIN_NAME | EMAIL_ADDRESS.
	ExternalOauthSnowflakeUserMappingAttribute []ExternalOauthSnowflakeUserMappingAttributeObservation `json:"externalOauthSnowflakeUserMappingAttribute,omitempty" tf:"external_oauth_snowflake_user_mapping_attribute,omitempty"`

	// (Set of String) Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	ExternalOauthTokenUserMappingClaim []ExternalOauthTokenUserMappingClaimObservation `json:"externalOauthTokenUserMappingClaim,omitempty" tf:"external_oauth_token_user_mapping_claim,omitempty"`
}

type DescribeOutputParameters struct {
}

type EnabledInitParameters struct {
}

type EnabledObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnabledParameters struct {
}

type ExternalOauthAddPrivilegedRolesToBlockedListInitParameters struct {
}

type ExternalOauthAddPrivilegedRolesToBlockedListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String)
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String)
	Level *string `json:"level,omitempty" tf:"level,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthAddPrivilegedRolesToBlockedListParameters struct {
}

type ExternalOauthAllowedRolesListInitParameters struct {
}

type ExternalOauthAllowedRolesListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthAllowedRolesListParameters struct {
}

type ExternalOauthAnyRoleModeInitParameters struct {
}

type ExternalOauthAnyRoleModeObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthAnyRoleModeParameters struct {
}

type ExternalOauthAudienceListInitParameters struct {
}

type ExternalOauthAudienceListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthAudienceListParameters struct {
}

type ExternalOauthBlockedRolesListInitParameters struct {
}

type ExternalOauthBlockedRolesListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthBlockedRolesListParameters struct {
}

type ExternalOauthIssuerInitParameters struct {
}

type ExternalOauthIssuerObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthIssuerParameters struct {
}

type ExternalOauthJwsKeysURLInitParameters struct {
}

type ExternalOauthJwsKeysURLObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthJwsKeysURLParameters struct {
}

type ExternalOauthRsaPublicKey2InitParameters struct {
}

type ExternalOauthRsaPublicKey2Observation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthRsaPublicKey2Parameters struct {
}

type ExternalOauthRsaPublicKeyInitParameters struct {
}

type ExternalOauthRsaPublicKeyObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthRsaPublicKeyParameters struct {
}

type ExternalOauthScopeDelimiterInitParameters struct {
}

type ExternalOauthScopeDelimiterObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthScopeDelimiterParameters struct {
}

type ExternalOauthSnowflakeUserMappingAttributeInitParameters struct {
}

type ExternalOauthSnowflakeUserMappingAttributeObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthSnowflakeUserMappingAttributeParameters struct {
}

type ExternalOauthTokenUserMappingClaimInitParameters struct {
}

type ExternalOauthTokenUserMappingClaimObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ExternalOauthTokenUserMappingClaimParameters struct {
}

type OauthIntegrationInitParameters struct {

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specifies whether to initiate operation of the integration or suspend it.
	// Specifies whether to initiate operation of the integration or suspend it.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Set of String) Specifies the list of roles that the client can set as the primary role. For more information about this resource, see docs.
	// Specifies the list of roles that the client can set as the primary role. For more information about this resource, see [docs](./account_role).
	// +listType=set
	ExternalOauthAllowedRolesList []*string `json:"externalOauthAllowedRolesList,omitempty" tf:"external_oauth_allowed_roles_list,omitempty"`

	// insensitive): DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE.
	// Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token. Valid values are (case-insensitive): `DISABLE` | `ENABLE` | `ENABLE_FOR_PRIVILEGE`.
	ExternalOauthAnyRoleMode *string `json:"externalOauthAnyRoleMode,omitempty" tf:"external_oauth_any_role_mode,omitempty"`

	// (Set of String) Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// +listType=set
	ExternalOauthAudienceList []*string `json:"externalOauthAudienceList,omitempty" tf:"external_oauth_audience_list,omitempty"`

	// (Set of String) Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +listType=set
	ExternalOauthBlockedRolesList []*string `json:"externalOauthBlockedRolesList,omitempty" tf:"external_oauth_blocked_roles_list,omitempty"`

	// (String) Specifies the URL to define the OAuth 2.0 authorization server.
	// Specifies the URL to define the OAuth 2.0 authorization server.
	ExternalOauthIssuer *string `json:"externalOauthIssuer,omitempty" tf:"external_oauth_issuer,omitempty"`

	// (Set of String) Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// +listType=set
	ExternalOauthJwsKeysURL []*string `json:"externalOauthJwsKeysUrl,omitempty" tf:"external_oauth_jws_keys_url,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey *string `json:"externalOauthRsaPublicKey,omitempty" tf:"external_oauth_rsa_public_key,omitempty"`

	// ----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	// Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey2 *string `json:"externalOauthRsaPublicKey2,omitempty" tf:"external_oauth_rsa_public_key_2,omitempty"`

	// (String) Specifies the scope delimiter in the authorization token.
	// Specifies the scope delimiter in the authorization token.
	ExternalOauthScopeDelimiter *string `json:"externalOauthScopeDelimiter,omitempty" tf:"external_oauth_scope_delimiter,omitempty"`

	// (String) Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	// Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	ExternalOauthScopeMappingAttribute *string `json:"externalOauthScopeMappingAttribute,omitempty" tf:"external_oauth_scope_mapping_attribute,omitempty"`

	// insensitive): LOGIN_NAME | EMAIL_ADDRESS.
	// Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record. Valid values are (case-insensitive): `LOGIN_NAME` | `EMAIL_ADDRESS`.
	ExternalOauthSnowflakeUserMappingAttribute *string `json:"externalOauthSnowflakeUserMappingAttribute,omitempty" tf:"external_oauth_snowflake_user_mapping_attribute,omitempty"`

	// (Set of String) Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// +listType=set
	ExternalOauthTokenUserMappingClaim []*string `json:"externalOauthTokenUserMappingClaim,omitempty" tf:"external_oauth_token_user_mapping_claim,omitempty"`

	// insensitive): OKTA | AZURE | PING_FEDERATE | CUSTOM.
	// Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server. Valid values are (case-insensitive): `OKTA` | `AZURE` | `PING_FEDERATE` | `CUSTOM`.
	ExternalOauthType *string `json:"externalOauthType,omitempty" tf:"external_oauth_type,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type OauthIntegrationObservation struct {

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (List of Object) Outputs the result of DESCRIBE SECURITY INTEGRATIONS for the given security integration. (see below for nested schema)
	// Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
	DescribeOutput []DescribeOutputObservation `json:"describeOutput,omitempty" tf:"describe_output,omitempty"`

	// (Boolean) Specifies whether to initiate operation of the integration or suspend it.
	// Specifies whether to initiate operation of the integration or suspend it.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Set of String) Specifies the list of roles that the client can set as the primary role. For more information about this resource, see docs.
	// Specifies the list of roles that the client can set as the primary role. For more information about this resource, see [docs](./account_role).
	// +listType=set
	ExternalOauthAllowedRolesList []*string `json:"externalOauthAllowedRolesList,omitempty" tf:"external_oauth_allowed_roles_list,omitempty"`

	// insensitive): DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE.
	// Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token. Valid values are (case-insensitive): `DISABLE` | `ENABLE` | `ENABLE_FOR_PRIVILEGE`.
	ExternalOauthAnyRoleMode *string `json:"externalOauthAnyRoleMode,omitempty" tf:"external_oauth_any_role_mode,omitempty"`

	// (Set of String) Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// +listType=set
	ExternalOauthAudienceList []*string `json:"externalOauthAudienceList,omitempty" tf:"external_oauth_audience_list,omitempty"`

	// (Set of String) Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +listType=set
	ExternalOauthBlockedRolesList []*string `json:"externalOauthBlockedRolesList,omitempty" tf:"external_oauth_blocked_roles_list,omitempty"`

	// (String) Specifies the URL to define the OAuth 2.0 authorization server.
	// Specifies the URL to define the OAuth 2.0 authorization server.
	ExternalOauthIssuer *string `json:"externalOauthIssuer,omitempty" tf:"external_oauth_issuer,omitempty"`

	// (Set of String) Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// +listType=set
	ExternalOauthJwsKeysURL []*string `json:"externalOauthJwsKeysUrl,omitempty" tf:"external_oauth_jws_keys_url,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey *string `json:"externalOauthRsaPublicKey,omitempty" tf:"external_oauth_rsa_public_key,omitempty"`

	// ----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	// Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	ExternalOauthRsaPublicKey2 *string `json:"externalOauthRsaPublicKey2,omitempty" tf:"external_oauth_rsa_public_key_2,omitempty"`

	// (String) Specifies the scope delimiter in the authorization token.
	// Specifies the scope delimiter in the authorization token.
	ExternalOauthScopeDelimiter *string `json:"externalOauthScopeDelimiter,omitempty" tf:"external_oauth_scope_delimiter,omitempty"`

	// (String) Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	// Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	ExternalOauthScopeMappingAttribute *string `json:"externalOauthScopeMappingAttribute,omitempty" tf:"external_oauth_scope_mapping_attribute,omitempty"`

	// insensitive): LOGIN_NAME | EMAIL_ADDRESS.
	// Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record. Valid values are (case-insensitive): `LOGIN_NAME` | `EMAIL_ADDRESS`.
	ExternalOauthSnowflakeUserMappingAttribute *string `json:"externalOauthSnowflakeUserMappingAttribute,omitempty" tf:"external_oauth_snowflake_user_mapping_attribute,omitempty"`

	// (Set of String) Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// +listType=set
	ExternalOauthTokenUserMappingClaim []*string `json:"externalOauthTokenUserMappingClaim,omitempty" tf:"external_oauth_token_user_mapping_claim,omitempty"`

	// insensitive): OKTA | AZURE | PING_FEDERATE | CUSTOM.
	// Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server. Valid values are (case-insensitive): `OKTA` | `AZURE` | `PING_FEDERATE` | `CUSTOM`.
	ExternalOauthType *string `json:"externalOauthType,omitempty" tf:"external_oauth_type,omitempty"`

	// (String) Fully qualified name of the resource. For more information, see object name resolution.
	// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
	FullyQualifiedName *string `json:"fullyQualifiedName,omitempty" tf:"fully_qualified_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of Object) Parameters related to this security integration. (see below for nested schema)
	// Parameters related to this security integration.
	RelatedParameters []RelatedParametersObservation `json:"relatedParameters,omitempty" tf:"related_parameters,omitempty"`

	// (List of Object) Outputs the result of SHOW SECURITY INTEGRATIONS for the given security integration. (see below for nested schema)
	// Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
	ShowOutput []ShowOutputObservation `json:"showOutput,omitempty" tf:"show_output,omitempty"`
}

type OauthIntegrationParameters struct {

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) Specifies whether to initiate operation of the integration or suspend it.
	// Specifies whether to initiate operation of the integration or suspend it.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Set of String) Specifies the list of roles that the client can set as the primary role. For more information about this resource, see docs.
	// Specifies the list of roles that the client can set as the primary role. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	// +listType=set
	ExternalOauthAllowedRolesList []*string `json:"externalOauthAllowedRolesList,omitempty" tf:"external_oauth_allowed_roles_list,omitempty"`

	// insensitive): DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE.
	// Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token. Valid values are (case-insensitive): `DISABLE` | `ENABLE` | `ENABLE_FOR_PRIVILEGE`.
	// +kubebuilder:validation:Optional
	ExternalOauthAnyRoleMode *string `json:"externalOauthAnyRoleMode,omitempty" tf:"external_oauth_any_role_mode,omitempty"`

	// (Set of String) Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// Specifies additional values that can be used for the access token's audience validation on top of using the Customer's Snowflake Account URL
	// +kubebuilder:validation:Optional
	// +listType=set
	ExternalOauthAudienceList []*string `json:"externalOauthAudienceList,omitempty" tf:"external_oauth_audience_list,omitempty"`

	// (Set of String) Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL_OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	// +listType=set
	ExternalOauthBlockedRolesList []*string `json:"externalOauthBlockedRolesList,omitempty" tf:"external_oauth_blocked_roles_list,omitempty"`

	// (String) Specifies the URL to define the OAuth 2.0 authorization server.
	// Specifies the URL to define the OAuth 2.0 authorization server.
	// +kubebuilder:validation:Optional
	ExternalOauthIssuer *string `json:"externalOauthIssuer,omitempty" tf:"external_oauth_issuer,omitempty"`

	// (Set of String) Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExternalOauthJwsKeysURL []*string `json:"externalOauthJwsKeysUrl,omitempty" tf:"external_oauth_jws_keys_url,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
	// +kubebuilder:validation:Optional
	ExternalOauthRsaPublicKey *string `json:"externalOauthRsaPublicKey,omitempty" tf:"external_oauth_rsa_public_key,omitempty"`

	// ----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	// Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
	// +kubebuilder:validation:Optional
	ExternalOauthRsaPublicKey2 *string `json:"externalOauthRsaPublicKey2,omitempty" tf:"external_oauth_rsa_public_key_2,omitempty"`

	// (String) Specifies the scope delimiter in the authorization token.
	// Specifies the scope delimiter in the authorization token.
	// +kubebuilder:validation:Optional
	ExternalOauthScopeDelimiter *string `json:"externalOauthScopeDelimiter,omitempty" tf:"external_oauth_scope_delimiter,omitempty"`

	// (String) Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	// Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
	// +kubebuilder:validation:Optional
	ExternalOauthScopeMappingAttribute *string `json:"externalOauthScopeMappingAttribute,omitempty" tf:"external_oauth_scope_mapping_attribute,omitempty"`

	// insensitive): LOGIN_NAME | EMAIL_ADDRESS.
	// Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record. Valid values are (case-insensitive): `LOGIN_NAME` | `EMAIL_ADDRESS`.
	// +kubebuilder:validation:Optional
	ExternalOauthSnowflakeUserMappingAttribute *string `json:"externalOauthSnowflakeUserMappingAttribute,omitempty" tf:"external_oauth_snowflake_user_mapping_attribute,omitempty"`

	// (Set of String) Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExternalOauthTokenUserMappingClaim []*string `json:"externalOauthTokenUserMappingClaim,omitempty" tf:"external_oauth_token_user_mapping_claim,omitempty"`

	// insensitive): OKTA | AZURE | PING_FEDERATE | CUSTOM.
	// Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server. Valid values are (case-insensitive): `OKTA` | `AZURE` | `PING_FEDERATE` | `CUSTOM`.
	// +kubebuilder:validation:Optional
	ExternalOauthType *string `json:"externalOauthType,omitempty" tf:"external_oauth_type,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RelatedParametersInitParameters struct {
}

type RelatedParametersObservation struct {

	// (List of Object) (see below for nested schema)
	ExternalOauthAddPrivilegedRolesToBlockedList []ExternalOauthAddPrivilegedRolesToBlockedListObservation `json:"externalOauthAddPrivilegedRolesToBlockedList,omitempty" tf:"external_oauth_add_privileged_roles_to_blocked_list,omitempty"`
}

type RelatedParametersParameters struct {
}

type ShowOutputInitParameters struct {
}

type ShowOutputObservation struct {

	// (String)
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (Boolean) Specifies whether to initiate operation of the integration or suspend it.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	IntegrationType *string `json:"integrationType,omitempty" tf:"integration_type,omitempty"`

	// (String) Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ShowOutputParameters struct {
}

// OauthIntegrationSpec defines the desired state of OauthIntegration
type OauthIntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OauthIntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OauthIntegrationInitParameters `json:"initProvider,omitempty"`
}

// OauthIntegrationStatus defines the observed state of OauthIntegration.
type OauthIntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OauthIntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OauthIntegration is the Schema for the OauthIntegrations API. Resource used to manage external oauth security integration objects. For more information, check security integrations documentation https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-oauth-external.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type OauthIntegration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.externalOauthIssuer) || (has(self.initProvider) && has(self.initProvider.externalOauthIssuer))",message="spec.forProvider.externalOauthIssuer is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.externalOauthSnowflakeUserMappingAttribute) || (has(self.initProvider) && has(self.initProvider.externalOauthSnowflakeUserMappingAttribute))",message="spec.forProvider.externalOauthSnowflakeUserMappingAttribute is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.externalOauthTokenUserMappingClaim) || (has(self.initProvider) && has(self.initProvider.externalOauthTokenUserMappingClaim))",message="spec.forProvider.externalOauthTokenUserMappingClaim is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.externalOauthType) || (has(self.initProvider) && has(self.initProvider.externalOauthType))",message="spec.forProvider.externalOauthType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   OauthIntegrationSpec   `json:"spec"`
	Status OauthIntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OauthIntegrationList contains a list of OauthIntegrations
type OauthIntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OauthIntegration `json:"items"`
}

// Repository type metadata.
var (
	OauthIntegration_Kind             = "OauthIntegration"
	OauthIntegration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OauthIntegration_Kind}.String()
	OauthIntegration_KindAPIVersion   = OauthIntegration_Kind + "." + CRDGroupVersion.String()
	OauthIntegration_GroupVersionKind = CRDGroupVersion.WithKind(OauthIntegration_Kind)
)

func init() {
	SchemeBuilder.Register(&OauthIntegration{}, &OauthIntegrationList{})
}
