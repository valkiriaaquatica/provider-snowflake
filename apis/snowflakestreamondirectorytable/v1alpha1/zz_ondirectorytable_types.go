// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DescribeOutputInitParameters struct {
}

type DescribeOutputObservation struct {

	// (List of String)
	BaseTables []*string `json:"baseTables,omitempty" tf:"base_tables,omitempty"`

	// (String) Specifies a comment for the stream.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String)
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// (String)
	InvalidReason *string `json:"invalidReason,omitempty" tf:"invalid_reason,omitempty"`

	// (String)
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// (String)
	OwnerRoleType *string `json:"ownerRoleType,omitempty" tf:"owner_role_type,omitempty"`

	// (String)
	SchemaName *string `json:"schemaName,omitempty" tf:"schema_name,omitempty"`

	// (String)
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// (Boolean) Indicated if the stream is stale. Read more on stream staleness in Snowflake docs.
	Stale *bool `json:"stale,omitempty" tf:"stale,omitempty"`

	// (String)
	StaleAfter *string `json:"staleAfter,omitempty" tf:"stale_after,omitempty"`

	// (String)
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DescribeOutputParameters struct {
}

type OnDirectoryTableInitParameters struct {

	// (String) Specifies a comment for the stream.
	// Specifies a comment for the stream.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) (Default: false) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	// (Default: `false`) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	CopyGrants *bool `json:"copyGrants,omitempty" tf:"copy_grants,omitempty"`

	// (String) The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The database in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The schema in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// (String) Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ". For more information about this resource, see docs.
	// Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`. For more information about this resource, see [docs](./stage).
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`
}

type OnDirectoryTableObservation struct {

	// (String) Specifies a comment for the stream.
	// Specifies a comment for the stream.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) (Default: false) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	// (Default: `false`) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	CopyGrants *bool `json:"copyGrants,omitempty" tf:"copy_grants,omitempty"`

	// (String) The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The database in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// (List of Object) Outputs the result of DESCRIBE STREAM for the given stream. (see below for nested schema)
	// Outputs the result of `DESCRIBE STREAM` for the given stream.
	DescribeOutput []DescribeOutputObservation `json:"describeOutput,omitempty" tf:"describe_output,omitempty"`

	// (String) Fully qualified name of the resource. For more information, see object name resolution.
	// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
	FullyQualifiedName *string `json:"fullyQualifiedName,omitempty" tf:"fully_qualified_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The schema in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// (List of Object) Outputs the result of SHOW STREAMS for the given stream. (see below for nested schema)
	// Outputs the result of `SHOW STREAMS` for the given stream.
	ShowOutput []ShowOutputObservation `json:"showOutput,omitempty" tf:"show_output,omitempty"`

	// (String) Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ". For more information about this resource, see docs.
	// Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`. For more information about this resource, see [docs](./stage).
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`

	// (Boolean) Indicated if the stream is stale. Read more on stream staleness in Snowflake docs.
	// Indicated if the stream is stale. Read more on stream staleness in Snowflake [docs](https://docs.snowflake.com/en/user-guide/streams-intro#data-retention-period-and-staleness).
	Stale *bool `json:"stale,omitempty" tf:"stale,omitempty"`

	// (String) Specifies a type for the stream. This field is used for checking external changes and recreating the resources if needed.
	// Specifies a type for the stream. This field is used for checking external changes and recreating the resources if needed.
	StreamType *string `json:"streamType,omitempty" tf:"stream_type,omitempty"`
}

type OnDirectoryTableParameters struct {

	// (String) Specifies a comment for the stream.
	// Specifies a comment for the stream.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (Boolean) (Default: false) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	// (Default: `false`) Retains the access permissions from the original stream when a stream is recreated using the OR REPLACE clause. This is used when the provider detects changes for fields that can not be changed by ALTER.
	// +kubebuilder:validation:Optional
	CopyGrants *bool `json:"copyGrants,omitempty" tf:"copy_grants,omitempty"`

	// (String) The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The database in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// The schema in which to create the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// (String) Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: |, ., ". For more information about this resource, see docs.
	// Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage's database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`. For more information about this resource, see [docs](./stage).
	// +kubebuilder:validation:Optional
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`
}

type ShowOutputInitParameters struct {
}

type ShowOutputObservation struct {

	// (List of String)
	BaseTables []*string `json:"baseTables,omitempty" tf:"base_tables,omitempty"`

	// (String) Specifies a comment for the stream.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String)
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// (String)
	InvalidReason *string `json:"invalidReason,omitempty" tf:"invalid_reason,omitempty"`

	// (String)
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (String) Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// (String)
	OwnerRoleType *string `json:"ownerRoleType,omitempty" tf:"owner_role_type,omitempty"`

	// (String)
	SchemaName *string `json:"schemaName,omitempty" tf:"schema_name,omitempty"`

	// (String)
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// (Boolean) Indicated if the stream is stale. Read more on stream staleness in Snowflake docs.
	Stale *bool `json:"stale,omitempty" tf:"stale,omitempty"`

	// (String)
	StaleAfter *string `json:"staleAfter,omitempty" tf:"stale_after,omitempty"`

	// (String)
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ShowOutputParameters struct {
}

// OnDirectoryTableSpec defines the desired state of OnDirectoryTable
type OnDirectoryTableSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OnDirectoryTableParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OnDirectoryTableInitParameters `json:"initProvider,omitempty"`
}

// OnDirectoryTableStatus defines the observed state of OnDirectoryTable.
type OnDirectoryTableStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OnDirectoryTableObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OnDirectoryTable is the Schema for the OnDirectoryTables API. Resource used to manage streams on directory tables. For more information, check stream documentation https://docs.snowflake.com/en/sql-reference/sql/create-stream.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type OnDirectoryTable struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.database) || (has(self.initProvider) && has(self.initProvider.database))",message="spec.forProvider.database is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.schema) || (has(self.initProvider) && has(self.initProvider.schema))",message="spec.forProvider.schema is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.stage) || (has(self.initProvider) && has(self.initProvider.stage))",message="spec.forProvider.stage is a required parameter"
	Spec   OnDirectoryTableSpec   `json:"spec"`
	Status OnDirectoryTableStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OnDirectoryTableList contains a list of OnDirectoryTables
type OnDirectoryTableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OnDirectoryTable `json:"items"`
}

// Repository type metadata.
var (
	OnDirectoryTable_Kind             = "OnDirectoryTable"
	OnDirectoryTable_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OnDirectoryTable_Kind}.String()
	OnDirectoryTable_KindAPIVersion   = OnDirectoryTable_Kind + "." + CRDGroupVersion.String()
	OnDirectoryTable_GroupVersionKind = CRDGroupVersion.WithKind(OnDirectoryTable_Kind)
)

func init() {
	SchemeBuilder.Register(&OnDirectoryTable{}, &OnDirectoryTableList{})
}
