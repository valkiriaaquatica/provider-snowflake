// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PrivilegesToShareInitParameters struct {

	// (String) The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	OnAllTablesInSchema *string `json:"onAllTablesInSchema,omitempty" tf:"on_all_tables_in_schema,omitempty"`

	// (String) The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see [docs](./database).
	OnDatabase *string `json:"onDatabase,omitempty" tf:"on_database,omitempty"`

	// (String) The fully qualified name of the function on which privileges will be granted.
	// The fully qualified name of the function on which privileges will be granted.
	OnFunction *string `json:"onFunction,omitempty" tf:"on_function,omitempty"`

	// (String) The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see [docs](./schema).
	OnSchema *string `json:"onSchema,omitempty" tf:"on_schema,omitempty"`

	// (String) The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see [docs](./table).
	OnTable *string `json:"onTable,omitempty" tf:"on_table,omitempty"`

	// (String) The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see [docs](./tag).
	OnTag *string `json:"onTag,omitempty" tf:"on_tag,omitempty"`

	// (String) The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see [docs](./view).
	OnView *string `json:"onView,omitempty" tf:"on_view,omitempty"`

	// reference/sql/grant-privilege-share#syntax
	// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
	// +listType=set
	Privileges []*string `json:"privileges,omitempty" tf:"privileges,omitempty"`

	// (String) The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see [docs](./share).
	ToShare *string `json:"toShare,omitempty" tf:"to_share,omitempty"`
}

type PrivilegesToShareObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	OnAllTablesInSchema *string `json:"onAllTablesInSchema,omitempty" tf:"on_all_tables_in_schema,omitempty"`

	// (String) The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see [docs](./database).
	OnDatabase *string `json:"onDatabase,omitempty" tf:"on_database,omitempty"`

	// (String) The fully qualified name of the function on which privileges will be granted.
	// The fully qualified name of the function on which privileges will be granted.
	OnFunction *string `json:"onFunction,omitempty" tf:"on_function,omitempty"`

	// (String) The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see [docs](./schema).
	OnSchema *string `json:"onSchema,omitempty" tf:"on_schema,omitempty"`

	// (String) The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see [docs](./table).
	OnTable *string `json:"onTable,omitempty" tf:"on_table,omitempty"`

	// (String) The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see [docs](./tag).
	OnTag *string `json:"onTag,omitempty" tf:"on_tag,omitempty"`

	// (String) The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see [docs](./view).
	OnView *string `json:"onView,omitempty" tf:"on_view,omitempty"`

	// reference/sql/grant-privilege-share#syntax
	// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
	// +listType=set
	Privileges []*string `json:"privileges,omitempty" tf:"privileges,omitempty"`

	// (String) The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see [docs](./share).
	ToShare *string `json:"toShare,omitempty" tf:"to_share,omitempty"`
}

type PrivilegesToShareParameters struct {

	// (String) The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
	// +kubebuilder:validation:Optional
	OnAllTablesInSchema *string `json:"onAllTablesInSchema,omitempty" tf:"on_all_tables_in_schema,omitempty"`

	// (String) The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see [docs](./database).
	// +kubebuilder:validation:Optional
	OnDatabase *string `json:"onDatabase,omitempty" tf:"on_database,omitempty"`

	// (String) The fully qualified name of the function on which privileges will be granted.
	// The fully qualified name of the function on which privileges will be granted.
	// +kubebuilder:validation:Optional
	OnFunction *string `json:"onFunction,omitempty" tf:"on_function,omitempty"`

	// (String) The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see [docs](./schema).
	// +kubebuilder:validation:Optional
	OnSchema *string `json:"onSchema,omitempty" tf:"on_schema,omitempty"`

	// (String) The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see [docs](./table).
	// +kubebuilder:validation:Optional
	OnTable *string `json:"onTable,omitempty" tf:"on_table,omitempty"`

	// (String) The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see [docs](./tag).
	// +kubebuilder:validation:Optional
	OnTag *string `json:"onTag,omitempty" tf:"on_tag,omitempty"`

	// (String) The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see [docs](./view).
	// +kubebuilder:validation:Optional
	OnView *string `json:"onView,omitempty" tf:"on_view,omitempty"`

	// reference/sql/grant-privilege-share#syntax
	// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
	// +kubebuilder:validation:Optional
	// +listType=set
	Privileges []*string `json:"privileges,omitempty" tf:"privileges,omitempty"`

	// (String) The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
	// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see [docs](./share).
	// +kubebuilder:validation:Optional
	ToShare *string `json:"toShare,omitempty" tf:"to_share,omitempty"`
}

// PrivilegesToShareSpec defines the desired state of PrivilegesToShare
type PrivilegesToShareSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrivilegesToShareParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivilegesToShareInitParameters `json:"initProvider,omitempty"`
}

// PrivilegesToShareStatus defines the observed state of PrivilegesToShare.
type PrivilegesToShareStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivilegesToShareObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivilegesToShare is the Schema for the PrivilegesToShares API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type PrivilegesToShare struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.privileges) || (has(self.initProvider) && has(self.initProvider.privileges))",message="spec.forProvider.privileges is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.toShare) || (has(self.initProvider) && has(self.initProvider.toShare))",message="spec.forProvider.toShare is a required parameter"
	Spec   PrivilegesToShareSpec   `json:"spec"`
	Status PrivilegesToShareStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivilegesToShareList contains a list of PrivilegesToShares
type PrivilegesToShareList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivilegesToShare `json:"items"`
}

// Repository type metadata.
var (
	PrivilegesToShare_Kind             = "PrivilegesToShare"
	PrivilegesToShare_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivilegesToShare_Kind}.String()
	PrivilegesToShare_KindAPIVersion   = PrivilegesToShare_Kind + "." + CRDGroupVersion.String()
	PrivilegesToShare_GroupVersionKind = CRDGroupVersion.WithKind(PrivilegesToShare_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivilegesToShare{}, &PrivilegesToShareList{})
}
