//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationPolicyInitParameters) DeepCopyInto(out *AggregationPolicyInitParameters) {
	*out = *in
	if in.EntityKey != nil {
		in, out := &in.EntityKey, &out.EntityKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationPolicyInitParameters.
func (in *AggregationPolicyInitParameters) DeepCopy() *AggregationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AggregationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationPolicyObservation) DeepCopyInto(out *AggregationPolicyObservation) {
	*out = *in
	if in.EntityKey != nil {
		in, out := &in.EntityKey, &out.EntityKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationPolicyObservation.
func (in *AggregationPolicyObservation) DeepCopy() *AggregationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AggregationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationPolicyParameters) DeepCopyInto(out *AggregationPolicyParameters) {
	*out = *in
	if in.EntityKey != nil {
		in, out := &in.EntityKey, &out.EntityKey
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationPolicyParameters.
func (in *AggregationPolicyParameters) DeepCopy() *AggregationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AggregationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.MaskingPolicy != nil {
		in, out := &in.MaskingPolicy, &out.MaskingPolicy
		*out = make([]MaskingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionPolicy != nil {
		in, out := &in.ProjectionPolicy, &out.ProjectionPolicy
		*out = make([]ProjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.MaskingPolicy != nil {
		in, out := &in.MaskingPolicy, &out.MaskingPolicy
		*out = make([]MaskingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionPolicy != nil {
		in, out := &in.ProjectionPolicy, &out.ProjectionPolicy
		*out = make([]ProjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.MaskingPolicy != nil {
		in, out := &in.MaskingPolicy, &out.MaskingPolicy
		*out = make([]MaskingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionPolicy != nil {
		in, out := &in.ProjectionPolicy, &out.ProjectionPolicy
		*out = make([]ProjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricFunctionInitParameters) DeepCopyInto(out *DataMetricFunctionInitParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleStatus != nil {
		in, out := &in.ScheduleStatus, &out.ScheduleStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricFunctionInitParameters.
func (in *DataMetricFunctionInitParameters) DeepCopy() *DataMetricFunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataMetricFunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricFunctionObservation) DeepCopyInto(out *DataMetricFunctionObservation) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleStatus != nil {
		in, out := &in.ScheduleStatus, &out.ScheduleStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricFunctionObservation.
func (in *DataMetricFunctionObservation) DeepCopy() *DataMetricFunctionObservation {
	if in == nil {
		return nil
	}
	out := new(DataMetricFunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricFunctionParameters) DeepCopyInto(out *DataMetricFunctionParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleStatus != nil {
		in, out := &in.ScheduleStatus, &out.ScheduleStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricFunctionParameters.
func (in *DataMetricFunctionParameters) DeepCopy() *DataMetricFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(DataMetricFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricScheduleInitParameters) DeepCopyInto(out *DataMetricScheduleInitParameters) {
	*out = *in
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
	if in.UsingCron != nil {
		in, out := &in.UsingCron, &out.UsingCron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricScheduleInitParameters.
func (in *DataMetricScheduleInitParameters) DeepCopy() *DataMetricScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataMetricScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricScheduleObservation) DeepCopyInto(out *DataMetricScheduleObservation) {
	*out = *in
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
	if in.UsingCron != nil {
		in, out := &in.UsingCron, &out.UsingCron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricScheduleObservation.
func (in *DataMetricScheduleObservation) DeepCopy() *DataMetricScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(DataMetricScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetricScheduleParameters) DeepCopyInto(out *DataMetricScheduleParameters) {
	*out = *in
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
	if in.UsingCron != nil {
		in, out := &in.UsingCron, &out.UsingCron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetricScheduleParameters.
func (in *DataMetricScheduleParameters) DeepCopy() *DataMetricScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(DataMetricScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DescribeOutputInitParameters) DeepCopyInto(out *DescribeOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DescribeOutputInitParameters.
func (in *DescribeOutputInitParameters) DeepCopy() *DescribeOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(DescribeOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DescribeOutputObservation) DeepCopyInto(out *DescribeOutputObservation) {
	*out = *in
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsNullable != nil {
		in, out := &in.IsNullable, &out.IsNullable
		*out = new(bool)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.IsUnique != nil {
		in, out := &in.IsUnique, &out.IsUnique
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.PrivacyDomain != nil {
		in, out := &in.PrivacyDomain, &out.PrivacyDomain
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DescribeOutputObservation.
func (in *DescribeOutputObservation) DeepCopy() *DescribeOutputObservation {
	if in == nil {
		return nil
	}
	out := new(DescribeOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DescribeOutputParameters) DeepCopyInto(out *DescribeOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DescribeOutputParameters.
func (in *DescribeOutputParameters) DeepCopy() *DescribeOutputParameters {
	if in == nil {
		return nil
	}
	out := new(DescribeOutputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskingPolicyInitParameters) DeepCopyInto(out *MaskingPolicyInitParameters) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Using != nil {
		in, out := &in.Using, &out.Using
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskingPolicyInitParameters.
func (in *MaskingPolicyInitParameters) DeepCopy() *MaskingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaskingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskingPolicyObservation) DeepCopyInto(out *MaskingPolicyObservation) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Using != nil {
		in, out := &in.Using, &out.Using
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskingPolicyObservation.
func (in *MaskingPolicyObservation) DeepCopy() *MaskingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MaskingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskingPolicyParameters) DeepCopyInto(out *MaskingPolicyParameters) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Using != nil {
		in, out := &in.Using, &out.Using
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskingPolicyParameters.
func (in *MaskingPolicyParameters) DeepCopy() *MaskingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MaskingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectionPolicyInitParameters) DeepCopyInto(out *ProjectionPolicyInitParameters) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectionPolicyInitParameters.
func (in *ProjectionPolicyInitParameters) DeepCopy() *ProjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectionPolicyObservation) DeepCopyInto(out *ProjectionPolicyObservation) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectionPolicyObservation.
func (in *ProjectionPolicyObservation) DeepCopy() *ProjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectionPolicyParameters) DeepCopyInto(out *ProjectionPolicyParameters) {
	*out = *in
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectionPolicyParameters.
func (in *ProjectionPolicyParameters) DeepCopy() *ProjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RowAccessPolicyInitParameters) DeepCopyInto(out *RowAccessPolicyInitParameters) {
	*out = *in
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RowAccessPolicyInitParameters.
func (in *RowAccessPolicyInitParameters) DeepCopy() *RowAccessPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RowAccessPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RowAccessPolicyObservation) DeepCopyInto(out *RowAccessPolicyObservation) {
	*out = *in
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RowAccessPolicyObservation.
func (in *RowAccessPolicyObservation) DeepCopy() *RowAccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RowAccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RowAccessPolicyParameters) DeepCopyInto(out *RowAccessPolicyParameters) {
	*out = *in
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RowAccessPolicyParameters.
func (in *RowAccessPolicyParameters) DeepCopy() *RowAccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RowAccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputInitParameters) DeepCopyInto(out *ShowOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputInitParameters.
func (in *ShowOutputInitParameters) DeepCopy() *ShowOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputObservation) DeepCopyInto(out *ShowOutputObservation) {
	*out = *in
	if in.ChangeTracking != nil {
		in, out := &in.ChangeTracking, &out.ChangeTracking
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.IsMaterialized != nil {
		in, out := &in.IsMaterialized, &out.IsMaterialized
		*out = new(bool)
		**out = **in
	}
	if in.IsSecure != nil {
		in, out := &in.IsSecure, &out.IsSecure
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.OwnerRoleType != nil {
		in, out := &in.OwnerRoleType, &out.OwnerRoleType
		*out = new(string)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputObservation.
func (in *ShowOutputObservation) DeepCopy() *ShowOutputObservation {
	if in == nil {
		return nil
	}
	out := new(ShowOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputParameters) DeepCopyInto(out *ShowOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputParameters.
func (in *ShowOutputParameters) DeepCopy() *ShowOutputParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *View) DeepCopyInto(out *View) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new View.
func (in *View) DeepCopy() *View {
	if in == nil {
		return nil
	}
	out := new(View)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *View) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewInitParameters) DeepCopyInto(out *ViewInitParameters) {
	*out = *in
	if in.AggregationPolicy != nil {
		in, out := &in.AggregationPolicy, &out.AggregationPolicy
		*out = make([]AggregationPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChangeTracking != nil {
		in, out := &in.ChangeTracking, &out.ChangeTracking
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CopyGrants != nil {
		in, out := &in.CopyGrants, &out.CopyGrants
		*out = new(bool)
		**out = **in
	}
	if in.DataMetricFunction != nil {
		in, out := &in.DataMetricFunction, &out.DataMetricFunction
		*out = make([]DataMetricFunctionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataMetricSchedule != nil {
		in, out := &in.DataMetricSchedule, &out.DataMetricSchedule
		*out = make([]DataMetricScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.IsRecursive != nil {
		in, out := &in.IsRecursive, &out.IsRecursive
		*out = new(string)
		**out = **in
	}
	if in.IsSecure != nil {
		in, out := &in.IsSecure, &out.IsSecure
		*out = new(string)
		**out = **in
	}
	if in.IsTemporary != nil {
		in, out := &in.IsTemporary, &out.IsTemporary
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowAccessPolicy != nil {
		in, out := &in.RowAccessPolicy, &out.RowAccessPolicy
		*out = make([]RowAccessPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Statement != nil {
		in, out := &in.Statement, &out.Statement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewInitParameters.
func (in *ViewInitParameters) DeepCopy() *ViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(ViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewList) DeepCopyInto(out *ViewList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]View, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewList.
func (in *ViewList) DeepCopy() *ViewList {
	if in == nil {
		return nil
	}
	out := new(ViewList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ViewList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewObservation) DeepCopyInto(out *ViewObservation) {
	*out = *in
	if in.AggregationPolicy != nil {
		in, out := &in.AggregationPolicy, &out.AggregationPolicy
		*out = make([]AggregationPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChangeTracking != nil {
		in, out := &in.ChangeTracking, &out.ChangeTracking
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CopyGrants != nil {
		in, out := &in.CopyGrants, &out.CopyGrants
		*out = new(bool)
		**out = **in
	}
	if in.DataMetricFunction != nil {
		in, out := &in.DataMetricFunction, &out.DataMetricFunction
		*out = make([]DataMetricFunctionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataMetricSchedule != nil {
		in, out := &in.DataMetricSchedule, &out.DataMetricSchedule
		*out = make([]DataMetricScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DescribeOutput != nil {
		in, out := &in.DescribeOutput, &out.DescribeOutput
		*out = make([]DescribeOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullyQualifiedName != nil {
		in, out := &in.FullyQualifiedName, &out.FullyQualifiedName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsRecursive != nil {
		in, out := &in.IsRecursive, &out.IsRecursive
		*out = new(string)
		**out = **in
	}
	if in.IsSecure != nil {
		in, out := &in.IsSecure, &out.IsSecure
		*out = new(string)
		**out = **in
	}
	if in.IsTemporary != nil {
		in, out := &in.IsTemporary, &out.IsTemporary
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowAccessPolicy != nil {
		in, out := &in.RowAccessPolicy, &out.RowAccessPolicy
		*out = make([]RowAccessPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.ShowOutput != nil {
		in, out := &in.ShowOutput, &out.ShowOutput
		*out = make([]ShowOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Statement != nil {
		in, out := &in.Statement, &out.Statement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewObservation.
func (in *ViewObservation) DeepCopy() *ViewObservation {
	if in == nil {
		return nil
	}
	out := new(ViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewParameters) DeepCopyInto(out *ViewParameters) {
	*out = *in
	if in.AggregationPolicy != nil {
		in, out := &in.AggregationPolicy, &out.AggregationPolicy
		*out = make([]AggregationPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChangeTracking != nil {
		in, out := &in.ChangeTracking, &out.ChangeTracking
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CopyGrants != nil {
		in, out := &in.CopyGrants, &out.CopyGrants
		*out = new(bool)
		**out = **in
	}
	if in.DataMetricFunction != nil {
		in, out := &in.DataMetricFunction, &out.DataMetricFunction
		*out = make([]DataMetricFunctionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataMetricSchedule != nil {
		in, out := &in.DataMetricSchedule, &out.DataMetricSchedule
		*out = make([]DataMetricScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.IsRecursive != nil {
		in, out := &in.IsRecursive, &out.IsRecursive
		*out = new(string)
		**out = **in
	}
	if in.IsSecure != nil {
		in, out := &in.IsSecure, &out.IsSecure
		*out = new(string)
		**out = **in
	}
	if in.IsTemporary != nil {
		in, out := &in.IsTemporary, &out.IsTemporary
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RowAccessPolicy != nil {
		in, out := &in.RowAccessPolicy, &out.RowAccessPolicy
		*out = make([]RowAccessPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Statement != nil {
		in, out := &in.Statement, &out.Statement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewParameters.
func (in *ViewParameters) DeepCopy() *ViewParameters {
	if in == nil {
		return nil
	}
	out := new(ViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewSpec) DeepCopyInto(out *ViewSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewSpec.
func (in *ViewSpec) DeepCopy() *ViewSpec {
	if in == nil {
		return nil
	}
	out := new(ViewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewStatus) DeepCopyInto(out *ViewStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewStatus.
func (in *ViewStatus) DeepCopy() *ViewStatus {
	if in == nil {
		return nil
	}
	out := new(ViewStatus)
	in.DeepCopyInto(out)
	return out
}
