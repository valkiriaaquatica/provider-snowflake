//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Monitor) DeepCopyInto(out *Monitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Monitor.
func (in *Monitor) DeepCopy() *Monitor {
	if in == nil {
		return nil
	}
	out := new(Monitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Monitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorInitParameters) DeepCopyInto(out *MonitorInitParameters) {
	*out = *in
	if in.CreditQuota != nil {
		in, out := &in.CreditQuota, &out.CreditQuota
		*out = new(float64)
		**out = **in
	}
	if in.EndTimestamp != nil {
		in, out := &in.EndTimestamp, &out.EndTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotifyTriggers != nil {
		in, out := &in.NotifyTriggers, &out.NotifyTriggers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.NotifyUsers != nil {
		in, out := &in.NotifyUsers, &out.NotifyUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		*out = new(string)
		**out = **in
	}
	if in.SuspendImmediateTrigger != nil {
		in, out := &in.SuspendImmediateTrigger, &out.SuspendImmediateTrigger
		*out = new(float64)
		**out = **in
	}
	if in.SuspendTrigger != nil {
		in, out := &in.SuspendTrigger, &out.SuspendTrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorInitParameters.
func (in *MonitorInitParameters) DeepCopy() *MonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorList) DeepCopyInto(out *MonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Monitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorList.
func (in *MonitorList) DeepCopy() *MonitorList {
	if in == nil {
		return nil
	}
	out := new(MonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorObservation) DeepCopyInto(out *MonitorObservation) {
	*out = *in
	if in.CreditQuota != nil {
		in, out := &in.CreditQuota, &out.CreditQuota
		*out = new(float64)
		**out = **in
	}
	if in.EndTimestamp != nil {
		in, out := &in.EndTimestamp, &out.EndTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.FullyQualifiedName != nil {
		in, out := &in.FullyQualifiedName, &out.FullyQualifiedName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotifyTriggers != nil {
		in, out := &in.NotifyTriggers, &out.NotifyTriggers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.NotifyUsers != nil {
		in, out := &in.NotifyUsers, &out.NotifyUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShowOutput != nil {
		in, out := &in.ShowOutput, &out.ShowOutput
		*out = make([]ShowOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		*out = new(string)
		**out = **in
	}
	if in.SuspendImmediateTrigger != nil {
		in, out := &in.SuspendImmediateTrigger, &out.SuspendImmediateTrigger
		*out = new(float64)
		**out = **in
	}
	if in.SuspendTrigger != nil {
		in, out := &in.SuspendTrigger, &out.SuspendTrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorObservation.
func (in *MonitorObservation) DeepCopy() *MonitorObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorParameters) DeepCopyInto(out *MonitorParameters) {
	*out = *in
	if in.CreditQuota != nil {
		in, out := &in.CreditQuota, &out.CreditQuota
		*out = new(float64)
		**out = **in
	}
	if in.EndTimestamp != nil {
		in, out := &in.EndTimestamp, &out.EndTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotifyTriggers != nil {
		in, out := &in.NotifyTriggers, &out.NotifyTriggers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.NotifyUsers != nil {
		in, out := &in.NotifyUsers, &out.NotifyUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		*out = new(string)
		**out = **in
	}
	if in.SuspendImmediateTrigger != nil {
		in, out := &in.SuspendImmediateTrigger, &out.SuspendImmediateTrigger
		*out = new(float64)
		**out = **in
	}
	if in.SuspendTrigger != nil {
		in, out := &in.SuspendTrigger, &out.SuspendTrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorParameters.
func (in *MonitorParameters) DeepCopy() *MonitorParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorSpec) DeepCopyInto(out *MonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorSpec.
func (in *MonitorSpec) DeepCopy() *MonitorSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorStatus) DeepCopyInto(out *MonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorStatus.
func (in *MonitorStatus) DeepCopy() *MonitorStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputInitParameters) DeepCopyInto(out *ShowOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputInitParameters.
func (in *ShowOutputInitParameters) DeepCopy() *ShowOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputObservation) DeepCopyInto(out *ShowOutputObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.CreditQuota != nil {
		in, out := &in.CreditQuota, &out.CreditQuota
		*out = new(float64)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.RemainingCredits != nil {
		in, out := &in.RemainingCredits, &out.RemainingCredits
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.SuspendAt != nil {
		in, out := &in.SuspendAt, &out.SuspendAt
		*out = new(float64)
		**out = **in
	}
	if in.SuspendImmediateAt != nil {
		in, out := &in.SuspendImmediateAt, &out.SuspendImmediateAt
		*out = new(float64)
		**out = **in
	}
	if in.UsedCredits != nil {
		in, out := &in.UsedCredits, &out.UsedCredits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputObservation.
func (in *ShowOutputObservation) DeepCopy() *ShowOutputObservation {
	if in == nil {
		return nil
	}
	out := new(ShowOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputParameters) DeepCopyInto(out *ShowOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputParameters.
func (in *ShowOutputParameters) DeepCopy() *ShowOutputParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputParameters)
	in.DeepCopyInto(out)
	return out
}
