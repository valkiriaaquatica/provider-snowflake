// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BlockedRolesListInitParameters struct {
}

type BlockedRolesListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type BlockedRolesListParameters struct {
}

type CommentInitParameters struct {
}

type CommentObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CommentParameters struct {
}

type DescribeOutputInitParameters struct {
}

type DescribeOutputObservation struct {

	// (Set of String) A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	BlockedRolesList []BlockedRolesListObservation `json:"blockedRolesList,omitempty" tf:"blocked_roles_list,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	Comment []CommentObservation `json:"comment,omitempty" tf:"comment,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled []EnabledObservation `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see docs.
	NetworkPolicy []NetworkPolicyObservation `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthAllowNonTLSRedirectURI []OauthAllowNonTLSRedirectURIObservation `json:"oauthAllowNonTlsRedirectUri,omitempty" tf:"oauth_allow_non_tls_redirect_uri,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthAllowedAuthorizationEndpoints []OauthAllowedAuthorizationEndpointsObservation `json:"oauthAllowedAuthorizationEndpoints,omitempty" tf:"oauth_allowed_authorization_endpoints,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthAllowedTokenEndpoints []OauthAllowedTokenEndpointsObservation `json:"oauthAllowedTokenEndpoints,omitempty" tf:"oauth_allowed_token_endpoints,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthAuthorizationEndpoint []OauthAuthorizationEndpointObservation `json:"oauthAuthorizationEndpoint,omitempty" tf:"oauth_authorization_endpoint,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthClientRsaPublicKey2Fp []OauthClientRsaPublicKey2FpObservation `json:"oauthClientRsaPublicKey2Fp,omitempty" tf:"oauth_client_rsa_public_key_2_fp,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthClientRsaPublicKeyFp []OauthClientRsaPublicKeyFpObservation `json:"oauthClientRsaPublicKeyFp,omitempty" tf:"oauth_client_rsa_public_key_fp,omitempty"`

	// (String) Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: PUBLIC | CONFIDENTIAL.
	OauthClientType []OauthClientTypeObservation `json:"oauthClientType,omitempty" tf:"oauth_client_type,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthEnforcePkce []OauthEnforcePkceObservation `json:"oauthEnforcePkce,omitempty" tf:"oauth_enforce_pkce,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthIssueRefreshTokens []OauthIssueRefreshTokensObservation `json:"oauthIssueRefreshTokens,omitempty" tf:"oauth_issue_refresh_tokens,omitempty"`

	// uses special value that cannot be set in the configuration manually (-1)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	OauthRefreshTokenValidity []OauthRefreshTokenValidityObservation `json:"oauthRefreshTokenValidity,omitempty" tf:"oauth_refresh_token_validity,omitempty"`

	// (List of Object) (see below for nested schema)
	OauthTokenEndpoint []OauthTokenEndpointObservation `json:"oauthTokenEndpoint,omitempty" tf:"oauth_token_endpoint,omitempty"`

	// (String) Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: IMPLICIT | NONE.
	OauthUseSecondaryRoles []OauthUseSecondaryRolesObservation `json:"oauthUseSecondaryRoles,omitempty" tf:"oauth_use_secondary_roles,omitempty"`

	// (Set of String) A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see docs.
	PreAuthorizedRolesList []PreAuthorizedRolesListObservation `json:"preAuthorizedRolesList,omitempty" tf:"pre_authorized_roles_list,omitempty"`
}

type DescribeOutputParameters struct {
}

type EnabledInitParameters struct {
}

type EnabledObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnabledParameters struct {
}

type IntegrationForCustomClientsInitParameters struct {

	// (Set of String) A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +listType=set
	BlockedRolesList []*string `json:"blockedRolesList,omitempty" tf:"blocked_roles_list,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see docs.
	// Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see [docs](./network_policy).
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthAllowNonTLSRedirectURI *string `json:"oauthAllowNonTlsRedirectUri,omitempty" tf:"oauth_allow_non_tls_redirect_uri,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	OauthClientRsaPublicKey *string `json:"oauthClientRsaPublicKey,omitempty" tf:"oauth_client_rsa_public_key,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	OauthClientRsaPublicKey2 *string `json:"oauthClientRsaPublicKey2,omitempty" tf:"oauth_client_rsa_public_key_2,omitempty"`

	// (String) Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: PUBLIC | CONFIDENTIAL.
	// Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: `PUBLIC` | `CONFIDENTIAL`.
	OauthClientType *string `json:"oauthClientType,omitempty" tf:"oauth_client_type,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthEnforcePkce *string `json:"oauthEnforcePkce,omitempty" tf:"oauth_enforce_pkce,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthIssueRefreshTokens *string `json:"oauthIssueRefreshTokens,omitempty" tf:"oauth_issue_refresh_tokens,omitempty"`

	// (String, Sensitive) Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI.
	// Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI.
	OauthRedirectURISecretRef v1.SecretKeySelector `json:"oauthRedirectUriSecretRef" tf:"-"`

	// uses special value that cannot be set in the configuration manually (-1)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	OauthRefreshTokenValidity *float64 `json:"oauthRefreshTokenValidity,omitempty" tf:"oauth_refresh_token_validity,omitempty"`

	// (String) Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: IMPLICIT | NONE.
	// Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: `IMPLICIT` | `NONE`.
	OauthUseSecondaryRoles *string `json:"oauthUseSecondaryRoles,omitempty" tf:"oauth_use_secondary_roles,omitempty"`

	// (Set of String) A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see docs.
	// A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see [docs](./account_role).
	// +listType=set
	PreAuthorizedRolesList []*string `json:"preAuthorizedRolesList,omitempty" tf:"pre_authorized_roles_list,omitempty"`
}

type IntegrationForCustomClientsObservation struct {

	// (Set of String) A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +listType=set
	BlockedRolesList []*string `json:"blockedRolesList,omitempty" tf:"blocked_roles_list,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (List of Object) Outputs the result of DESCRIBE SECURITY INTEGRATION for the given integration. (see below for nested schema)
	// Outputs the result of `DESCRIBE SECURITY INTEGRATION` for the given integration.
	DescribeOutput []DescribeOutputObservation `json:"describeOutput,omitempty" tf:"describe_output,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Fully qualified name of the resource. For more information, see object name resolution.
	// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
	FullyQualifiedName *string `json:"fullyQualifiedName,omitempty" tf:"fully_qualified_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see docs.
	// Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see [docs](./network_policy).
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthAllowNonTLSRedirectURI *string `json:"oauthAllowNonTlsRedirectUri,omitempty" tf:"oauth_allow_non_tls_redirect_uri,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	OauthClientRsaPublicKey *string `json:"oauthClientRsaPublicKey,omitempty" tf:"oauth_client_rsa_public_key,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	OauthClientRsaPublicKey2 *string `json:"oauthClientRsaPublicKey2,omitempty" tf:"oauth_client_rsa_public_key_2,omitempty"`

	// (String) Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: PUBLIC | CONFIDENTIAL.
	// Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: `PUBLIC` | `CONFIDENTIAL`.
	OauthClientType *string `json:"oauthClientType,omitempty" tf:"oauth_client_type,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthEnforcePkce *string `json:"oauthEnforcePkce,omitempty" tf:"oauth_enforce_pkce,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	OauthIssueRefreshTokens *string `json:"oauthIssueRefreshTokens,omitempty" tf:"oauth_issue_refresh_tokens,omitempty"`

	// uses special value that cannot be set in the configuration manually (-1)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	OauthRefreshTokenValidity *float64 `json:"oauthRefreshTokenValidity,omitempty" tf:"oauth_refresh_token_validity,omitempty"`

	// (String) Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: IMPLICIT | NONE.
	// Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: `IMPLICIT` | `NONE`.
	OauthUseSecondaryRoles *string `json:"oauthUseSecondaryRoles,omitempty" tf:"oauth_use_secondary_roles,omitempty"`

	// (Set of String) A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see docs.
	// A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see [docs](./account_role).
	// +listType=set
	PreAuthorizedRolesList []*string `json:"preAuthorizedRolesList,omitempty" tf:"pre_authorized_roles_list,omitempty"`

	// (List of Object) Parameters related to this security integration. (see below for nested schema)
	// Parameters related to this security integration.
	RelatedParameters []RelatedParametersObservation `json:"relatedParameters,omitempty" tf:"related_parameters,omitempty"`

	// (List of Object) Outputs the result of SHOW SECURITY INTEGRATION for the given integration. (see below for nested schema)
	// Outputs the result of `SHOW SECURITY INTEGRATION` for the given integration.
	ShowOutput []ShowOutputObservation `json:"showOutput,omitempty" tf:"show_output,omitempty"`
}

type IntegrationForCustomClientsParameters struct {

	// (Set of String) A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see docs.
	// A set of Snowflake roles that a user cannot explicitly consent to using after authenticating. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST account parameter to FALSE. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	// +listType=set
	BlockedRolesList []*string `json:"blockedRolesList,omitempty" tf:"blocked_roles_list,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	// Specifies a comment for the OAuth integration.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	// Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see docs.
	// Specifies an existing network policy. This network policy controls network traffic that is attempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new access token. For more information about this resource, see [docs](./network_policy).
	// +kubebuilder:validation:Optional
	NetworkPolicy *string `json:"networkPolicy,omitempty" tf:"network_policy,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) If true, allows setting oauth_redirect_uri to a URI not protected by TLS. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	OauthAllowNonTLSRedirectURI *string `json:"oauthAllowNonTlsRedirectUri,omitempty" tf:"oauth_allow_non_tls_redirect_uri,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// +kubebuilder:validation:Optional
	OauthClientRsaPublicKey *string `json:"oauthClientRsaPublicKey,omitempty" tf:"oauth_client_rsa_public_key,omitempty"`

	// encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. External changes for this field won't be detected.
	// +kubebuilder:validation:Optional
	OauthClientRsaPublicKey2 *string `json:"oauthClientRsaPublicKey2,omitempty" tf:"oauth_client_rsa_public_key_2,omitempty"`

	// (String) Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: PUBLIC | CONFIDENTIAL.
	// Specifies the type of client being registered. Snowflake supports both confidential and public clients. Valid options are: `PUBLIC` | `CONFIDENTIAL`.
	// +kubebuilder:validation:Optional
	OauthClientType *string `json:"oauthClientType,omitempty" tf:"oauth_client_type,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	OauthEnforcePkce *string `json:"oauthEnforcePkce,omitempty" tf:"oauth_enforce_pkce,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to allow the client to exchange a refresh token for an access token when the current access token has expired. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	// +kubebuilder:validation:Optional
	OauthIssueRefreshTokens *string `json:"oauthIssueRefreshTokens,omitempty" tf:"oauth_issue_refresh_tokens,omitempty"`

	// (String, Sensitive) Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI.
	// Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI.
	// +kubebuilder:validation:Optional
	OauthRedirectURISecretRef v1.SecretKeySelector `json:"oauthRedirectUriSecretRef" tf:"-"`

	// uses special value that cannot be set in the configuration manually (-1)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies how long refresh tokens should be valid (in seconds). OAUTH_ISSUE_REFRESH_TOKENS must be set to TRUE.
	// +kubebuilder:validation:Optional
	OauthRefreshTokenValidity *float64 `json:"oauthRefreshTokenValidity,omitempty" tf:"oauth_refresh_token_validity,omitempty"`

	// (String) Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: IMPLICIT | NONE.
	// Specifies whether default secondary roles set in the user properties are activated by default in the session being opened. Valid options are: `IMPLICIT` | `NONE`.
	// +kubebuilder:validation:Optional
	OauthUseSecondaryRoles *string `json:"oauthUseSecondaryRoles,omitempty" tf:"oauth_use_secondary_roles,omitempty"`

	// (Set of String) A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see docs.
	// A set of Snowflake roles that a user does not need to explicitly consent to using after authenticating. For more information about this resource, see [docs](./account_role).
	// +kubebuilder:validation:Optional
	// +listType=set
	PreAuthorizedRolesList []*string `json:"preAuthorizedRolesList,omitempty" tf:"pre_authorized_roles_list,omitempty"`
}

type NetworkPolicyInitParameters struct {
}

type NetworkPolicyObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkPolicyParameters struct {
}

type OauthAddPrivilegedRolesToBlockedListInitParameters struct {
}

type OauthAddPrivilegedRolesToBlockedListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String)
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String)
	Level *string `json:"level,omitempty" tf:"level,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthAddPrivilegedRolesToBlockedListParameters struct {
}

type OauthAllowNonTLSRedirectURIInitParameters struct {
}

type OauthAllowNonTLSRedirectURIObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthAllowNonTLSRedirectURIParameters struct {
}

type OauthAllowedAuthorizationEndpointsInitParameters struct {
}

type OauthAllowedAuthorizationEndpointsObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthAllowedAuthorizationEndpointsParameters struct {
}

type OauthAllowedTokenEndpointsInitParameters struct {
}

type OauthAllowedTokenEndpointsObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthAllowedTokenEndpointsParameters struct {
}

type OauthAuthorizationEndpointInitParameters struct {
}

type OauthAuthorizationEndpointObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthAuthorizationEndpointParameters struct {
}

type OauthClientRsaPublicKey2FpInitParameters struct {
}

type OauthClientRsaPublicKey2FpObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthClientRsaPublicKey2FpParameters struct {
}

type OauthClientRsaPublicKeyFpInitParameters struct {
}

type OauthClientRsaPublicKeyFpObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthClientRsaPublicKeyFpParameters struct {
}

type OauthClientTypeInitParameters struct {
}

type OauthClientTypeObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthClientTypeParameters struct {
}

type OauthEnforcePkceInitParameters struct {
}

type OauthEnforcePkceObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthEnforcePkceParameters struct {
}

type OauthIssueRefreshTokensInitParameters struct {
}

type OauthIssueRefreshTokensObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthIssueRefreshTokensParameters struct {
}

type OauthRefreshTokenValidityInitParameters struct {
}

type OauthRefreshTokenValidityObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthRefreshTokenValidityParameters struct {
}

type OauthTokenEndpointInitParameters struct {
}

type OauthTokenEndpointObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthTokenEndpointParameters struct {
}

type OauthUseSecondaryRolesInitParameters struct {
}

type OauthUseSecondaryRolesObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OauthUseSecondaryRolesParameters struct {
}

type PreAuthorizedRolesListInitParameters struct {
}

type PreAuthorizedRolesListObservation struct {

	// (String)
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PreAuthorizedRolesListParameters struct {
}

type RelatedParametersInitParameters struct {
}

type RelatedParametersObservation struct {

	// (List of Object) (see below for nested schema)
	OauthAddPrivilegedRolesToBlockedList []OauthAddPrivilegedRolesToBlockedListObservation `json:"oauthAddPrivilegedRolesToBlockedList,omitempty" tf:"oauth_add_privileged_roles_to_blocked_list,omitempty"`
}

type RelatedParametersParameters struct {
}

type ShowOutputInitParameters struct {
}

type ShowOutputObservation struct {

	// (String)
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// (String) Specifies a comment for the OAuth integration.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String)
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// uses special value that cannot be set in the configuration manually (default)) Specifies whether this OAuth integration is enabled or disabled. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	IntegrationType *string `json:"integrationType,omitempty" tf:"integration_type,omitempty"`

	// (String) Specifies the name of the OAuth integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ShowOutputParameters struct {
}

// IntegrationForCustomClientsSpec defines the desired state of IntegrationForCustomClients
type IntegrationForCustomClientsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IntegrationForCustomClientsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IntegrationForCustomClientsInitParameters `json:"initProvider,omitempty"`
}

// IntegrationForCustomClientsStatus defines the observed state of IntegrationForCustomClients.
type IntegrationForCustomClientsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IntegrationForCustomClientsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// IntegrationForCustomClients is the Schema for the IntegrationForCustomClientss API. Resource used to manage oauth security integration for custom clients objects. For more information, check security integrations documentation https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-oauth-snowflake.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,snowflake}
type IntegrationForCustomClients struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.oauthClientType) || (has(self.initProvider) && has(self.initProvider.oauthClientType))",message="spec.forProvider.oauthClientType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.oauthRedirectUriSecretRef)",message="spec.forProvider.oauthRedirectUriSecretRef is a required parameter"
	Spec   IntegrationForCustomClientsSpec   `json:"spec"`
	Status IntegrationForCustomClientsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IntegrationForCustomClientsList contains a list of IntegrationForCustomClientss
type IntegrationForCustomClientsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IntegrationForCustomClients `json:"items"`
}

// Repository type metadata.
var (
	IntegrationForCustomClients_Kind             = "IntegrationForCustomClients"
	IntegrationForCustomClients_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: IntegrationForCustomClients_Kind}.String()
	IntegrationForCustomClients_KindAPIVersion   = IntegrationForCustomClients_Kind + "." + CRDGroupVersion.String()
	IntegrationForCustomClients_GroupVersionKind = CRDGroupVersion.WithKind(IntegrationForCustomClients_Kind)
)

func init() {
	SchemeBuilder.Register(&IntegrationForCustomClients{}, &IntegrationForCustomClientsList{})
}
