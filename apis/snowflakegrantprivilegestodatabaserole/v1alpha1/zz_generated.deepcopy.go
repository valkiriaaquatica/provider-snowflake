//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInitParameters) DeepCopyInto(out *AllInitParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInitParameters.
func (in *AllInitParameters) DeepCopy() *AllInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllObservation) DeepCopyInto(out *AllObservation) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllObservation.
func (in *AllObservation) DeepCopy() *AllObservation {
	if in == nil {
		return nil
	}
	out := new(AllObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllParameters) DeepCopyInto(out *AllParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllParameters.
func (in *AllParameters) DeepCopy() *AllParameters {
	if in == nil {
		return nil
	}
	out := new(AllParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureInitParameters) DeepCopyInto(out *FutureInitParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureInitParameters.
func (in *FutureInitParameters) DeepCopy() *FutureInitParameters {
	if in == nil {
		return nil
	}
	out := new(FutureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureObservation) DeepCopyInto(out *FutureObservation) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureObservation.
func (in *FutureObservation) DeepCopy() *FutureObservation {
	if in == nil {
		return nil
	}
	out := new(FutureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FutureParameters) DeepCopyInto(out *FutureParameters) {
	*out = *in
	if in.InDatabase != nil {
		in, out := &in.InDatabase, &out.InDatabase
		*out = new(string)
		**out = **in
	}
	if in.InSchema != nil {
		in, out := &in.InSchema, &out.InSchema
		*out = new(string)
		**out = **in
	}
	if in.ObjectTypePlural != nil {
		in, out := &in.ObjectTypePlural, &out.ObjectTypePlural
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FutureParameters.
func (in *FutureParameters) DeepCopy() *FutureParameters {
	if in == nil {
		return nil
	}
	out := new(FutureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaInitParameters) DeepCopyInto(out *OnSchemaInitParameters) {
	*out = *in
	if in.AllSchemasInDatabase != nil {
		in, out := &in.AllSchemasInDatabase, &out.AllSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.FutureSchemasInDatabase != nil {
		in, out := &in.FutureSchemasInDatabase, &out.FutureSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaInitParameters.
func (in *OnSchemaInitParameters) DeepCopy() *OnSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaObjectInitParameters) DeepCopyInto(out *OnSchemaObjectInitParameters) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaObjectInitParameters.
func (in *OnSchemaObjectInitParameters) DeepCopy() *OnSchemaObjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSchemaObjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaObjectObservation) DeepCopyInto(out *OnSchemaObjectObservation) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaObjectObservation.
func (in *OnSchemaObjectObservation) DeepCopy() *OnSchemaObjectObservation {
	if in == nil {
		return nil
	}
	out := new(OnSchemaObjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaObjectParameters) DeepCopyInto(out *OnSchemaObjectParameters) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]AllParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Future != nil {
		in, out := &in.Future, &out.Future
		*out = make([]FutureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaObjectParameters.
func (in *OnSchemaObjectParameters) DeepCopy() *OnSchemaObjectParameters {
	if in == nil {
		return nil
	}
	out := new(OnSchemaObjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaObservation) DeepCopyInto(out *OnSchemaObservation) {
	*out = *in
	if in.AllSchemasInDatabase != nil {
		in, out := &in.AllSchemasInDatabase, &out.AllSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.FutureSchemasInDatabase != nil {
		in, out := &in.FutureSchemasInDatabase, &out.FutureSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaObservation.
func (in *OnSchemaObservation) DeepCopy() *OnSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(OnSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSchemaParameters) DeepCopyInto(out *OnSchemaParameters) {
	*out = *in
	if in.AllSchemasInDatabase != nil {
		in, out := &in.AllSchemasInDatabase, &out.AllSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.FutureSchemasInDatabase != nil {
		in, out := &in.FutureSchemasInDatabase, &out.FutureSchemasInDatabase
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSchemaParameters.
func (in *OnSchemaParameters) DeepCopy() *OnSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(OnSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRole) DeepCopyInto(out *PrivilegesToDatabaseRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRole.
func (in *PrivilegesToDatabaseRole) DeepCopy() *PrivilegesToDatabaseRole {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegesToDatabaseRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleInitParameters) DeepCopyInto(out *PrivilegesToDatabaseRoleInitParameters) {
	*out = *in
	if in.AllPrivileges != nil {
		in, out := &in.AllPrivileges, &out.AllPrivileges
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApply != nil {
		in, out := &in.AlwaysApply, &out.AlwaysApply
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApplyTrigger != nil {
		in, out := &in.AlwaysApplyTrigger, &out.AlwaysApplyTrigger
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.OnDatabase != nil {
		in, out := &in.OnDatabase, &out.OnDatabase
		*out = new(string)
		**out = **in
	}
	if in.OnSchema != nil {
		in, out := &in.OnSchema, &out.OnSchema
		*out = make([]OnSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSchemaObject != nil {
		in, out := &in.OnSchemaObject, &out.OnSchemaObject
		*out = make([]OnSchemaObjectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleInitParameters.
func (in *PrivilegesToDatabaseRoleInitParameters) DeepCopy() *PrivilegesToDatabaseRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleList) DeepCopyInto(out *PrivilegesToDatabaseRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivilegesToDatabaseRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleList.
func (in *PrivilegesToDatabaseRoleList) DeepCopy() *PrivilegesToDatabaseRoleList {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegesToDatabaseRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleObservation) DeepCopyInto(out *PrivilegesToDatabaseRoleObservation) {
	*out = *in
	if in.AllPrivileges != nil {
		in, out := &in.AllPrivileges, &out.AllPrivileges
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApply != nil {
		in, out := &in.AlwaysApply, &out.AlwaysApply
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApplyTrigger != nil {
		in, out := &in.AlwaysApplyTrigger, &out.AlwaysApplyTrigger
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OnDatabase != nil {
		in, out := &in.OnDatabase, &out.OnDatabase
		*out = new(string)
		**out = **in
	}
	if in.OnSchema != nil {
		in, out := &in.OnSchema, &out.OnSchema
		*out = make([]OnSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSchemaObject != nil {
		in, out := &in.OnSchemaObject, &out.OnSchemaObject
		*out = make([]OnSchemaObjectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleObservation.
func (in *PrivilegesToDatabaseRoleObservation) DeepCopy() *PrivilegesToDatabaseRoleObservation {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleParameters) DeepCopyInto(out *PrivilegesToDatabaseRoleParameters) {
	*out = *in
	if in.AllPrivileges != nil {
		in, out := &in.AllPrivileges, &out.AllPrivileges
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApply != nil {
		in, out := &in.AlwaysApply, &out.AlwaysApply
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysApplyTrigger != nil {
		in, out := &in.AlwaysApplyTrigger, &out.AlwaysApplyTrigger
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRoleName != nil {
		in, out := &in.DatabaseRoleName, &out.DatabaseRoleName
		*out = new(string)
		**out = **in
	}
	if in.OnDatabase != nil {
		in, out := &in.OnDatabase, &out.OnDatabase
		*out = new(string)
		**out = **in
	}
	if in.OnSchema != nil {
		in, out := &in.OnSchema, &out.OnSchema
		*out = make([]OnSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSchemaObject != nil {
		in, out := &in.OnSchemaObject, &out.OnSchemaObject
		*out = make([]OnSchemaObjectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleParameters.
func (in *PrivilegesToDatabaseRoleParameters) DeepCopy() *PrivilegesToDatabaseRoleParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleSpec) DeepCopyInto(out *PrivilegesToDatabaseRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleSpec.
func (in *PrivilegesToDatabaseRoleSpec) DeepCopy() *PrivilegesToDatabaseRoleSpec {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegesToDatabaseRoleStatus) DeepCopyInto(out *PrivilegesToDatabaseRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegesToDatabaseRoleStatus.
func (in *PrivilegesToDatabaseRoleStatus) DeepCopy() *PrivilegesToDatabaseRoleStatus {
	if in == nil {
		return nil
	}
	out := new(PrivilegesToDatabaseRoleStatus)
	in.DeepCopyInto(out)
	return out
}
