//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConcurrencyLevelInitParameters) DeepCopyInto(out *MaxConcurrencyLevelInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConcurrencyLevelInitParameters.
func (in *MaxConcurrencyLevelInitParameters) DeepCopy() *MaxConcurrencyLevelInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConcurrencyLevelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConcurrencyLevelObservation) DeepCopyInto(out *MaxConcurrencyLevelObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConcurrencyLevelObservation.
func (in *MaxConcurrencyLevelObservation) DeepCopy() *MaxConcurrencyLevelObservation {
	if in == nil {
		return nil
	}
	out := new(MaxConcurrencyLevelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConcurrencyLevelParameters) DeepCopyInto(out *MaxConcurrencyLevelParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConcurrencyLevelParameters.
func (in *MaxConcurrencyLevelParameters) DeepCopy() *MaxConcurrencyLevelParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConcurrencyLevelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersInitParameters) DeepCopyInto(out *ParametersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersInitParameters.
func (in *ParametersInitParameters) DeepCopy() *ParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.MaxConcurrencyLevel != nil {
		in, out := &in.MaxConcurrencyLevel, &out.MaxConcurrencyLevel
		*out = make([]MaxConcurrencyLevelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatementQueuedTimeoutInSeconds != nil {
		in, out := &in.StatementQueuedTimeoutInSeconds, &out.StatementQueuedTimeoutInSeconds
		*out = make([]StatementQueuedTimeoutInSecondsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatementTimeoutInSeconds != nil {
		in, out := &in.StatementTimeoutInSeconds, &out.StatementTimeoutInSeconds
		*out = make([]StatementTimeoutInSecondsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputInitParameters) DeepCopyInto(out *ShowOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputInitParameters.
func (in *ShowOutputInitParameters) DeepCopy() *ShowOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputObservation) DeepCopyInto(out *ShowOutputObservation) {
	*out = *in
	if in.AutoResume != nil {
		in, out := &in.AutoResume, &out.AutoResume
		*out = new(bool)
		**out = **in
	}
	if in.AutoSuspend != nil {
		in, out := &in.AutoSuspend, &out.AutoSuspend
		*out = new(float64)
		**out = **in
	}
	if in.Available != nil {
		in, out := &in.Available, &out.Available
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.EnableQueryAcceleration != nil {
		in, out := &in.EnableQueryAcceleration, &out.EnableQueryAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(string)
		**out = **in
	}
	if in.IsCurrent != nil {
		in, out := &in.IsCurrent, &out.IsCurrent
		*out = new(bool)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.MaxClusterCount != nil {
		in, out := &in.MaxClusterCount, &out.MaxClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.MinClusterCount != nil {
		in, out := &in.MinClusterCount, &out.MinClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Other != nil {
		in, out := &in.Other, &out.Other
		*out = new(float64)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.OwnerRoleType != nil {
		in, out := &in.OwnerRoleType, &out.OwnerRoleType
		*out = new(string)
		**out = **in
	}
	if in.Provisioning != nil {
		in, out := &in.Provisioning, &out.Provisioning
		*out = new(float64)
		**out = **in
	}
	if in.QueryAccelerationMaxScaleFactor != nil {
		in, out := &in.QueryAccelerationMaxScaleFactor, &out.QueryAccelerationMaxScaleFactor
		*out = new(float64)
		**out = **in
	}
	if in.Queued != nil {
		in, out := &in.Queued, &out.Queued
		*out = new(float64)
		**out = **in
	}
	if in.Quiescing != nil {
		in, out := &in.Quiescing, &out.Quiescing
		*out = new(float64)
		**out = **in
	}
	if in.ResourceConstraint != nil {
		in, out := &in.ResourceConstraint, &out.ResourceConstraint
		*out = new(string)
		**out = **in
	}
	if in.ResourceMonitor != nil {
		in, out := &in.ResourceMonitor, &out.ResourceMonitor
		*out = new(string)
		**out = **in
	}
	if in.ResumedOn != nil {
		in, out := &in.ResumedOn, &out.ResumedOn
		*out = new(string)
		**out = **in
	}
	if in.Running != nil {
		in, out := &in.Running, &out.Running
		*out = new(float64)
		**out = **in
	}
	if in.ScalingPolicy != nil {
		in, out := &in.ScalingPolicy, &out.ScalingPolicy
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StartedClusters != nil {
		in, out := &in.StartedClusters, &out.StartedClusters
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpdatedOn != nil {
		in, out := &in.UpdatedOn, &out.UpdatedOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputObservation.
func (in *ShowOutputObservation) DeepCopy() *ShowOutputObservation {
	if in == nil {
		return nil
	}
	out := new(ShowOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputParameters) DeepCopyInto(out *ShowOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputParameters.
func (in *ShowOutputParameters) DeepCopy() *ShowOutputParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementQueuedTimeoutInSecondsInitParameters) DeepCopyInto(out *StatementQueuedTimeoutInSecondsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementQueuedTimeoutInSecondsInitParameters.
func (in *StatementQueuedTimeoutInSecondsInitParameters) DeepCopy() *StatementQueuedTimeoutInSecondsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatementQueuedTimeoutInSecondsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementQueuedTimeoutInSecondsObservation) DeepCopyInto(out *StatementQueuedTimeoutInSecondsObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementQueuedTimeoutInSecondsObservation.
func (in *StatementQueuedTimeoutInSecondsObservation) DeepCopy() *StatementQueuedTimeoutInSecondsObservation {
	if in == nil {
		return nil
	}
	out := new(StatementQueuedTimeoutInSecondsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementQueuedTimeoutInSecondsParameters) DeepCopyInto(out *StatementQueuedTimeoutInSecondsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementQueuedTimeoutInSecondsParameters.
func (in *StatementQueuedTimeoutInSecondsParameters) DeepCopy() *StatementQueuedTimeoutInSecondsParameters {
	if in == nil {
		return nil
	}
	out := new(StatementQueuedTimeoutInSecondsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementTimeoutInSecondsInitParameters) DeepCopyInto(out *StatementTimeoutInSecondsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementTimeoutInSecondsInitParameters.
func (in *StatementTimeoutInSecondsInitParameters) DeepCopy() *StatementTimeoutInSecondsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatementTimeoutInSecondsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementTimeoutInSecondsObservation) DeepCopyInto(out *StatementTimeoutInSecondsObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementTimeoutInSecondsObservation.
func (in *StatementTimeoutInSecondsObservation) DeepCopy() *StatementTimeoutInSecondsObservation {
	if in == nil {
		return nil
	}
	out := new(StatementTimeoutInSecondsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementTimeoutInSecondsParameters) DeepCopyInto(out *StatementTimeoutInSecondsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementTimeoutInSecondsParameters.
func (in *StatementTimeoutInSecondsParameters) DeepCopy() *StatementTimeoutInSecondsParameters {
	if in == nil {
		return nil
	}
	out := new(StatementTimeoutInSecondsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Warehouse) DeepCopyInto(out *Warehouse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Warehouse.
func (in *Warehouse) DeepCopy() *Warehouse {
	if in == nil {
		return nil
	}
	out := new(Warehouse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Warehouse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseInitParameters) DeepCopyInto(out *WarehouseInitParameters) {
	*out = *in
	if in.AutoResume != nil {
		in, out := &in.AutoResume, &out.AutoResume
		*out = new(string)
		**out = **in
	}
	if in.AutoSuspend != nil {
		in, out := &in.AutoSuspend, &out.AutoSuspend
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnableQueryAcceleration != nil {
		in, out := &in.EnableQueryAcceleration, &out.EnableQueryAcceleration
		*out = new(string)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(string)
		**out = **in
	}
	if in.InitiallySuspended != nil {
		in, out := &in.InitiallySuspended, &out.InitiallySuspended
		*out = new(bool)
		**out = **in
	}
	if in.MaxClusterCount != nil {
		in, out := &in.MaxClusterCount, &out.MaxClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrencyLevel != nil {
		in, out := &in.MaxConcurrencyLevel, &out.MaxConcurrencyLevel
		*out = new(float64)
		**out = **in
	}
	if in.MinClusterCount != nil {
		in, out := &in.MinClusterCount, &out.MinClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QueryAccelerationMaxScaleFactor != nil {
		in, out := &in.QueryAccelerationMaxScaleFactor, &out.QueryAccelerationMaxScaleFactor
		*out = new(float64)
		**out = **in
	}
	if in.ResourceConstraint != nil {
		in, out := &in.ResourceConstraint, &out.ResourceConstraint
		*out = new(string)
		**out = **in
	}
	if in.ResourceMonitor != nil {
		in, out := &in.ResourceMonitor, &out.ResourceMonitor
		*out = new(string)
		**out = **in
	}
	if in.ScalingPolicy != nil {
		in, out := &in.ScalingPolicy, &out.ScalingPolicy
		*out = new(string)
		**out = **in
	}
	if in.StatementQueuedTimeoutInSeconds != nil {
		in, out := &in.StatementQueuedTimeoutInSeconds, &out.StatementQueuedTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.StatementTimeoutInSeconds != nil {
		in, out := &in.StatementTimeoutInSeconds, &out.StatementTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WarehouseSize != nil {
		in, out := &in.WarehouseSize, &out.WarehouseSize
		*out = new(string)
		**out = **in
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseInitParameters.
func (in *WarehouseInitParameters) DeepCopy() *WarehouseInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarehouseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseList) DeepCopyInto(out *WarehouseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Warehouse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseList.
func (in *WarehouseList) DeepCopy() *WarehouseList {
	if in == nil {
		return nil
	}
	out := new(WarehouseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WarehouseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseObservation) DeepCopyInto(out *WarehouseObservation) {
	*out = *in
	if in.AutoResume != nil {
		in, out := &in.AutoResume, &out.AutoResume
		*out = new(string)
		**out = **in
	}
	if in.AutoSuspend != nil {
		in, out := &in.AutoSuspend, &out.AutoSuspend
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnableQueryAcceleration != nil {
		in, out := &in.EnableQueryAcceleration, &out.EnableQueryAcceleration
		*out = new(string)
		**out = **in
	}
	if in.FullyQualifiedName != nil {
		in, out := &in.FullyQualifiedName, &out.FullyQualifiedName
		*out = new(string)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitiallySuspended != nil {
		in, out := &in.InitiallySuspended, &out.InitiallySuspended
		*out = new(bool)
		**out = **in
	}
	if in.MaxClusterCount != nil {
		in, out := &in.MaxClusterCount, &out.MaxClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrencyLevel != nil {
		in, out := &in.MaxConcurrencyLevel, &out.MaxConcurrencyLevel
		*out = new(float64)
		**out = **in
	}
	if in.MinClusterCount != nil {
		in, out := &in.MinClusterCount, &out.MinClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryAccelerationMaxScaleFactor != nil {
		in, out := &in.QueryAccelerationMaxScaleFactor, &out.QueryAccelerationMaxScaleFactor
		*out = new(float64)
		**out = **in
	}
	if in.ResourceConstraint != nil {
		in, out := &in.ResourceConstraint, &out.ResourceConstraint
		*out = new(string)
		**out = **in
	}
	if in.ResourceMonitor != nil {
		in, out := &in.ResourceMonitor, &out.ResourceMonitor
		*out = new(string)
		**out = **in
	}
	if in.ScalingPolicy != nil {
		in, out := &in.ScalingPolicy, &out.ScalingPolicy
		*out = new(string)
		**out = **in
	}
	if in.ShowOutput != nil {
		in, out := &in.ShowOutput, &out.ShowOutput
		*out = make([]ShowOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatementQueuedTimeoutInSeconds != nil {
		in, out := &in.StatementQueuedTimeoutInSeconds, &out.StatementQueuedTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.StatementTimeoutInSeconds != nil {
		in, out := &in.StatementTimeoutInSeconds, &out.StatementTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WarehouseSize != nil {
		in, out := &in.WarehouseSize, &out.WarehouseSize
		*out = new(string)
		**out = **in
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseObservation.
func (in *WarehouseObservation) DeepCopy() *WarehouseObservation {
	if in == nil {
		return nil
	}
	out := new(WarehouseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseParameters) DeepCopyInto(out *WarehouseParameters) {
	*out = *in
	if in.AutoResume != nil {
		in, out := &in.AutoResume, &out.AutoResume
		*out = new(string)
		**out = **in
	}
	if in.AutoSuspend != nil {
		in, out := &in.AutoSuspend, &out.AutoSuspend
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnableQueryAcceleration != nil {
		in, out := &in.EnableQueryAcceleration, &out.EnableQueryAcceleration
		*out = new(string)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(string)
		**out = **in
	}
	if in.InitiallySuspended != nil {
		in, out := &in.InitiallySuspended, &out.InitiallySuspended
		*out = new(bool)
		**out = **in
	}
	if in.MaxClusterCount != nil {
		in, out := &in.MaxClusterCount, &out.MaxClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrencyLevel != nil {
		in, out := &in.MaxConcurrencyLevel, &out.MaxConcurrencyLevel
		*out = new(float64)
		**out = **in
	}
	if in.MinClusterCount != nil {
		in, out := &in.MinClusterCount, &out.MinClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QueryAccelerationMaxScaleFactor != nil {
		in, out := &in.QueryAccelerationMaxScaleFactor, &out.QueryAccelerationMaxScaleFactor
		*out = new(float64)
		**out = **in
	}
	if in.ResourceConstraint != nil {
		in, out := &in.ResourceConstraint, &out.ResourceConstraint
		*out = new(string)
		**out = **in
	}
	if in.ResourceMonitor != nil {
		in, out := &in.ResourceMonitor, &out.ResourceMonitor
		*out = new(string)
		**out = **in
	}
	if in.ScalingPolicy != nil {
		in, out := &in.ScalingPolicy, &out.ScalingPolicy
		*out = new(string)
		**out = **in
	}
	if in.StatementQueuedTimeoutInSeconds != nil {
		in, out := &in.StatementQueuedTimeoutInSeconds, &out.StatementQueuedTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.StatementTimeoutInSeconds != nil {
		in, out := &in.StatementTimeoutInSeconds, &out.StatementTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WarehouseSize != nil {
		in, out := &in.WarehouseSize, &out.WarehouseSize
		*out = new(string)
		**out = **in
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseParameters.
func (in *WarehouseParameters) DeepCopy() *WarehouseParameters {
	if in == nil {
		return nil
	}
	out := new(WarehouseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseSpec) DeepCopyInto(out *WarehouseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseSpec.
func (in *WarehouseSpec) DeepCopy() *WarehouseSpec {
	if in == nil {
		return nil
	}
	out := new(WarehouseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseStatus) DeepCopyInto(out *WarehouseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseStatus.
func (in *WarehouseStatus) DeepCopy() *WarehouseStatus {
	if in == nil {
		return nil
	}
	out := new(WarehouseStatus)
	in.DeepCopyInto(out)
	return out
}
