---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: users.snowflakeserviceuser.crossplane.io
spec:
  group: snowflakeserviceuser.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - snowflake
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API. Resource used to manage
          service user objects. For more information, check user documentation https://docs.snowflake.com/en/sql-reference/commands-user-role#user-management.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  abortDetachedQuery:
                    description: |-
                      progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check ABORT_DETACHED_QUERY docs.
                      Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT_DETACHED_QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
                    type: boolean
                  autocommit:
                    description: |-
                      (Boolean) Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see Transactions. For more information, check AUTOCOMMIT docs.
                      Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
                    type: boolean
                  binaryInputFormat:
                    description: |-
                      to-BINARY conversion functions. For more information, see Binary input and output. For more information, check BINARY_INPUT_FORMAT docs.
                      The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
                    type: string
                  binaryOutputFormat:
                    description: |-
                      to-VARCHAR conversion functions. For more information, see Binary input and output. For more information, check BINARY_OUTPUT_FORMAT docs.
                      The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
                    type: string
                  clientMemoryLimit:
                    description: |-
                      (Number) Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check CLIENT_MEMORY_LIMIT docs.
                      Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT_MEMORY_LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
                    type: number
                  clientMetadataRequestUseConnectionCtx:
                    description: |-
                      (Boolean) For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs.
                      For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
                    type: boolean
                  clientPrefetchThreads:
                    description: |-
                      fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check CLIENT_PREFETCH_THREADS docs.
                      Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT_PREFETCH_THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
                    type: number
                  clientResultChunkSize:
                    description: |-
                      (Number) Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check CLIENT_RESULT_CHUNK_SIZE docs.
                      Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT_RESULT_CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
                    type: number
                  clientResultColumnCaseInsensitive:
                    description: |-
                      insensitively in ResultSet.get* methods in JDBC. For more information, check CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs.
                      Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
                    type: boolean
                  clientSessionKeepAlive:
                    description: |-
                      (Boolean) Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check CLIENT_SESSION_KEEP_ALIVE docs.
                      Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
                    type: boolean
                  clientSessionKeepAliveHeartbeatFrequency:
                    description: |-
                      between client attempts to update the token for the session. For more information, check CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs.
                      Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
                    type: number
                  clientTimestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check CLIENT_TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check [CLIENT_TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
                    type: string
                  comment:
                    description: |-
                      (String) Specifies a comment for the user.
                      Specifies a comment for the user.
                    type: string
                  dateInputFormat:
                    description: |-
                      (String) Specifies the input format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_INPUT_FORMAT docs.
                      Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
                    type: string
                  dateOutputFormat:
                    description: |-
                      (String) Specifies the display format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_OUTPUT_FORMAT docs.
                      Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
                    type: string
                  daysToExpiry:
                    description: Specifies the number of days after which the user
                      status is set to `Expired` and the user is no longer allowed
                      to log in. This is useful for defining temporary users (i.e.
                      users who should only have access to Snowflake for a limited
                      time period). In general, you should not set this property for
                      [account administrators](https://docs.snowflake.com/en/user-guide/security-access-control-considerations.html#label-accountadmin-users)
                      (i.e. users with the `ACCOUNTADMIN` role) because Snowflake
                      locks them out when they become `Expired`. External changes
                      for this field won't be detected.
                    type: number
                  defaultNamespace:
                    description: |-
                      (String) Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                      Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                    type: string
                  defaultRole:
                    description: |-
                      (String) Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does not grant the role to the user. The role must be granted explicitly to the user using the GRANT ROLE command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see docs.
                      Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does **not** grant the role to the user. The role must be granted explicitly to the user using the [GRANT ROLE](https://docs.snowflake.com/en/sql-reference/sql/grant-role) command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see [docs](./account_role).
                    type: string
                  defaultSecondaryRolesOption:
                    description: |-
                      insensitive): DEFAULT | NONE | ALL. More information can be found in doc.
                      (Default: `DEFAULT`) Specifies the secondary roles that are active for the user’s session upon login. Valid values are (case-insensitive): `DEFAULT` | `NONE` | `ALL`. More information can be found in [doc](https://docs.snowflake.com/en/sql-reference/sql/create-user#optional-object-properties-objectproperties).
                    type: string
                  defaultWarehouse:
                    description: |-
                      (String) Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see docs.
                      Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see [docs](./warehouse).
                    type: string
                  disabled:
                    description: |-
                      uses special value that cannot be set in the configuration manually (default)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                    type: string
                  displayName:
                    description: |-
                      (String) Name displayed for the user in the Snowflake web interface.
                      Name displayed for the user in the Snowflake web interface.
                    type: string
                  emailSecretRef:
                    description: |-
                      (String, Sensitive) Email address for the user.
                      Email address for the user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  enableUnloadPhysicalTypeOptimization:
                    description: |-
                      (Boolean) Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs.
                      Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
                    type: boolean
                  enableUnredactedQuerySyntaxError:
                    description: |-
                      (Boolean) Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs.
                      Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If `FALSE`, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to `TRUE` for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
                    type: boolean
                  errorOnNondeterministicMerge:
                    description: |-
                      (Boolean) Specifies whether to return an error when the MERGE command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_MERGE docs.
                      Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
                    type: boolean
                  errorOnNondeterministicUpdate:
                    description: |-
                      (Boolean) Specifies whether to return an error when the UPDATE command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_UPDATE docs.
                      Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
                    type: boolean
                  geographyOutputFormat:
                    description: |-
                      (String) Display format for GEOGRAPHY values. For more information, check GEOGRAPHY_OUTPUT_FORMAT docs.
                      Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). For more information, check [GEOGRAPHY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
                    type: string
                  geometryOutputFormat:
                    description: |-
                      (String) Display format for GEOMETRY values. For more information, check GEOMETRY_OUTPUT_FORMAT docs.
                      Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). For more information, check [GEOMETRY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
                    type: string
                  jdbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how JDBC processes columns that have a scale of zero (0). For more information, check JDBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
                    type: boolean
                  jdbcTreatTimestampNtzAsUtc:
                    description: |-
                      (Boolean) Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs.
                      Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check [JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
                    type: boolean
                  jdbcUseSessionTimezone:
                    description: |-
                      (Boolean) Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the TIMEZONE parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check JDBC_USE_SESSION_TIMEZONE docs.
                      Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC_USE_SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
                    type: boolean
                  jsonIndent:
                    description: |-
                      (Number) Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check JSON_INDENT docs.
                      Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
                    type: number
                  lockTimeout:
                    description: |-
                      (Number) Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check LOCK_TIMEOUT docs.
                      Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
                    type: number
                  logLevel:
                    description: |-
                      (String) Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see Setting log level. For more information, check LOG_LEVEL docs.
                      Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting log level](https://docs.snowflake.com/en/developer-guide/logging-tracing/logging-log-level). For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
                    type: string
                  loginNameSecretRef:
                    description: |-
                      insensitive.
                      The name users use to log in. If not supplied, snowflake will use name instead. Login names are always case-insensitive.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  minsToUnlock:
                    description: |-
                      uses special value that cannot be set in the configuration manually (-1)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. Note because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. **Note** because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                    type: number
                  multiStatementCount:
                    description: |-
                      statement capability. For more information, check MULTI_STATEMENT_COUNT docs.
                      Number of statements to execute when using the multi-statement capability. For more information, check [MULTI_STATEMENT_COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
                    type: number
                  name:
                    description: |-
                      (String) Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the docs. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
                      Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the [docs](https://docs.snowflake.net/manuals/sql-reference/sql/create-user.html#required-parameters). Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
                    type: string
                  networkPolicy:
                    description: |-
                      (String) Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see Controlling network traffic with network policies. Any existing network policy (created using CREATE NETWORK POLICY). For more information, check NETWORK_POLICY docs.
                      Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Any existing network policy (created using [CREATE NETWORK POLICY](https://docs.snowflake.com/en/sql-reference/sql/create-network-policy)). For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
                    type: string
                  noorderSequenceAsDefault:
                    description: |-
                      incremented column in increasing or decreasing order. For more information, check NOORDER_SEQUENCE_AS_DEFAULT docs.
                      Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER_SEQUENCE_AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
                    type: boolean
                  odbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how ODBC processes columns that have a scale of zero (0). For more information, check ODBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
                    type: boolean
                  preventUnloadToInternalStages:
                    description: |-
                      (Boolean) Specifies whether to prevent data unload operations to internal (Snowflake) stages using COPY INTO  statements. For more information, check PREVENT_UNLOAD_TO_INTERNAL_STAGES docs.
                      Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO <location>](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT_UNLOAD_TO_INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
                    type: boolean
                  queryTag:
                    description: |-
                      (String) Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the QUERY_HISTORY, QUERY_HISTORY_BY_* functions. For more information, check QUERY_TAG docs.
                      Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY_HISTORY, QUERY_HISTORY_BY_*](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
                    type: string
                  quotedIdentifiersIgnoreCase:
                    description: |-
                      quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see Identifier resolution). You can use this parameter in situations in which third-party applications always use double quotes around identifiers. For more information, check QUOTED_IDENTIFIERS_IGNORE_CASE docs.
                      Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED_IDENTIFIERS_IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
                    type: boolean
                  rowsPerResultset:
                    description: |-
                      (Number) Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check ROWS_PER_RESULTSET docs.
                      Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS_PER_RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
                    type: number
                  rsaPublicKey:
                    description: |-
                      pair authentication. Must be on 1 line without header and trailer.
                      Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
                    type: string
                  rsaPublicKey2:
                    description: |-
                      pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                      Specifies the user’s second RSA public key; used to rotate the public and private keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                    type: string
                  s3StageVpceDnsName:
                    description: |-
                      (String) Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via AWS PrivateLink for Amazon S3 use this endpoint to connect. For more information, see Accessing Internal stages with dedicated interface endpoints. For more information, check S3_STAGE_VPCE_DNS_NAME docs.
                      Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3_STAGE_VPCE_DNS_NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
                    type: string
                  searchPath:
                    description: |-
                      separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check SEARCH_PATH docs.
                      Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
                    type: string
                  simulatedDataSharingConsumer:
                    description: |-
                      (String) Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see Introduction to Secure Data Sharing and Working with shares. For more information, check SIMULATED_DATA_SHARING_CONSUMER docs.
                      Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see [Introduction to Secure Data Sharing](https://docs.snowflake.com/en/user-guide/data-sharing-intro) and [Working with shares](https://docs.snowflake.com/en/user-guide/data-sharing-provider). For more information, check [SIMULATED_DATA_SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
                    type: string
                  statementQueuedTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the MAX_CONCURRENCY_LEVEL parameter to ensure a warehouse is never backlogged. For more information, check STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX_CONCURRENCY_LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
                    type: number
                  statementTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check STATEMENT_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
                    type: number
                  strictJsonOutput:
                    description: |-
                      standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check STRICT_JSON_OUTPUT docs.
                      This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT_JSON_OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
                    type: boolean
                  timeInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIME data type. For more information, see Date and time input and output formats. Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check TIME_INPUT_FORMAT docs.
                      Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
                    type: string
                  timeOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIME data type. For more information, see Date and time input and output formats. For more information, check TIME_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
                    type: string
                  timestampDayIsAlways24H:
                    description: |-
                      (Boolean) Specifies whether the DATEADD function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check TIMESTAMP_DAY_IS_ALWAYS_24H docs.
                      Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP_DAY_IS_ALWAYS_24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
                    type: boolean
                  timestampInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check TIMESTAMP_INPUT_FORMAT docs.
                      Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
                    type: string
                  timestampLtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_LTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_LTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
                    type: string
                  timestampNtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check TIMESTAMP_NTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check [TIMESTAMP_NTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
                    type: string
                  timestampOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
                    type: string
                  timestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check [TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
                    type: string
                  timestampTzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_TZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_TZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
                    type: string
                  timezone:
                    description: |-
                      (String) Specifies the time zone for the session. You can specify a time zone name or a link name from release 2021a of the IANA Time Zone Database (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check TIMEZONE docs.
                      Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
                    type: string
                  traceLevel:
                    description: |-
                      (String) Controls how trace events are ingested into the event table. For more information about trace levels, see Setting trace level. For more information, check TRACE_LEVEL docs.
                      Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
                    type: string
                  transactionAbortOnError:
                    description: |-
                      autocommit transaction returns with an error. For more information, check TRANSACTION_ABORT_ON_ERROR docs.
                      Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION_ABORT_ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
                    type: boolean
                  transactionDefaultIsolationLevel:
                    description: |-
                      (String) Specifies the isolation level for transactions in the user session. For more information, check TRANSACTION_DEFAULT_ISOLATION_LEVEL docs.
                      Specifies the isolation level for transactions in the user session. For more information, check [TRANSACTION_DEFAULT_ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
                    type: string
                  twoDigitCenturyStart:
                    description: |-
                      digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the YY date format component (i.e. years represented as 2 digits). For more information, check TWO_DIGIT_CENTURY_START docs.
                      Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO_DIGIT_CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
                    type: number
                  unsupportedDdlAction:
                    description: |-
                      default) value specified for a constraint property returns an error. For more information, check UNSUPPORTED_DDL_ACTION docs.
                      Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED_DDL_ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
                    type: string
                  useCachedResult:
                    description: |-
                      (Boolean) Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check USE_CACHED_RESULT docs.
                      Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE_CACHED_RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
                    type: boolean
                  weekOfYearPolicy:
                    description: |-
                      (Number) Specifies how the weeks in a given year are computed. 0: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. 1: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check WEEK_OF_YEAR_POLICY docs.
                      Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK_OF_YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
                    type: number
                  weekStart:
                    description: |-
                      related date functions). 0: Legacy Snowflake behavior is used (i.e. ISO-like semantics). 1 (Monday) to 7 (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check WEEK_START docs.
                      Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  abortDetachedQuery:
                    description: |-
                      progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check ABORT_DETACHED_QUERY docs.
                      Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT_DETACHED_QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
                    type: boolean
                  autocommit:
                    description: |-
                      (Boolean) Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see Transactions. For more information, check AUTOCOMMIT docs.
                      Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
                    type: boolean
                  binaryInputFormat:
                    description: |-
                      to-BINARY conversion functions. For more information, see Binary input and output. For more information, check BINARY_INPUT_FORMAT docs.
                      The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
                    type: string
                  binaryOutputFormat:
                    description: |-
                      to-VARCHAR conversion functions. For more information, see Binary input and output. For more information, check BINARY_OUTPUT_FORMAT docs.
                      The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
                    type: string
                  clientMemoryLimit:
                    description: |-
                      (Number) Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check CLIENT_MEMORY_LIMIT docs.
                      Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT_MEMORY_LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
                    type: number
                  clientMetadataRequestUseConnectionCtx:
                    description: |-
                      (Boolean) For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs.
                      For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
                    type: boolean
                  clientPrefetchThreads:
                    description: |-
                      fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check CLIENT_PREFETCH_THREADS docs.
                      Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT_PREFETCH_THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
                    type: number
                  clientResultChunkSize:
                    description: |-
                      (Number) Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check CLIENT_RESULT_CHUNK_SIZE docs.
                      Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT_RESULT_CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
                    type: number
                  clientResultColumnCaseInsensitive:
                    description: |-
                      insensitively in ResultSet.get* methods in JDBC. For more information, check CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs.
                      Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
                    type: boolean
                  clientSessionKeepAlive:
                    description: |-
                      (Boolean) Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check CLIENT_SESSION_KEEP_ALIVE docs.
                      Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
                    type: boolean
                  clientSessionKeepAliveHeartbeatFrequency:
                    description: |-
                      between client attempts to update the token for the session. For more information, check CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs.
                      Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
                    type: number
                  clientTimestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check CLIENT_TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check [CLIENT_TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
                    type: string
                  comment:
                    description: |-
                      (String) Specifies a comment for the user.
                      Specifies a comment for the user.
                    type: string
                  dateInputFormat:
                    description: |-
                      (String) Specifies the input format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_INPUT_FORMAT docs.
                      Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
                    type: string
                  dateOutputFormat:
                    description: |-
                      (String) Specifies the display format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_OUTPUT_FORMAT docs.
                      Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
                    type: string
                  daysToExpiry:
                    description: Specifies the number of days after which the user
                      status is set to `Expired` and the user is no longer allowed
                      to log in. This is useful for defining temporary users (i.e.
                      users who should only have access to Snowflake for a limited
                      time period). In general, you should not set this property for
                      [account administrators](https://docs.snowflake.com/en/user-guide/security-access-control-considerations.html#label-accountadmin-users)
                      (i.e. users with the `ACCOUNTADMIN` role) because Snowflake
                      locks them out when they become `Expired`. External changes
                      for this field won't be detected.
                    type: number
                  defaultNamespace:
                    description: |-
                      (String) Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                      Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                    type: string
                  defaultRole:
                    description: |-
                      (String) Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does not grant the role to the user. The role must be granted explicitly to the user using the GRANT ROLE command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see docs.
                      Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does **not** grant the role to the user. The role must be granted explicitly to the user using the [GRANT ROLE](https://docs.snowflake.com/en/sql-reference/sql/grant-role) command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see [docs](./account_role).
                    type: string
                  defaultSecondaryRolesOption:
                    description: |-
                      insensitive): DEFAULT | NONE | ALL. More information can be found in doc.
                      (Default: `DEFAULT`) Specifies the secondary roles that are active for the user’s session upon login. Valid values are (case-insensitive): `DEFAULT` | `NONE` | `ALL`. More information can be found in [doc](https://docs.snowflake.com/en/sql-reference/sql/create-user#optional-object-properties-objectproperties).
                    type: string
                  defaultWarehouse:
                    description: |-
                      (String) Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see docs.
                      Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see [docs](./warehouse).
                    type: string
                  disabled:
                    description: |-
                      uses special value that cannot be set in the configuration manually (default)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                    type: string
                  displayName:
                    description: |-
                      (String) Name displayed for the user in the Snowflake web interface.
                      Name displayed for the user in the Snowflake web interface.
                    type: string
                  emailSecretRef:
                    description: |-
                      (String, Sensitive) Email address for the user.
                      Email address for the user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  enableUnloadPhysicalTypeOptimization:
                    description: |-
                      (Boolean) Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs.
                      Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
                    type: boolean
                  enableUnredactedQuerySyntaxError:
                    description: |-
                      (Boolean) Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs.
                      Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If `FALSE`, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to `TRUE` for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
                    type: boolean
                  errorOnNondeterministicMerge:
                    description: |-
                      (Boolean) Specifies whether to return an error when the MERGE command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_MERGE docs.
                      Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
                    type: boolean
                  errorOnNondeterministicUpdate:
                    description: |-
                      (Boolean) Specifies whether to return an error when the UPDATE command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_UPDATE docs.
                      Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
                    type: boolean
                  geographyOutputFormat:
                    description: |-
                      (String) Display format for GEOGRAPHY values. For more information, check GEOGRAPHY_OUTPUT_FORMAT docs.
                      Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). For more information, check [GEOGRAPHY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
                    type: string
                  geometryOutputFormat:
                    description: |-
                      (String) Display format for GEOMETRY values. For more information, check GEOMETRY_OUTPUT_FORMAT docs.
                      Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). For more information, check [GEOMETRY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
                    type: string
                  jdbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how JDBC processes columns that have a scale of zero (0). For more information, check JDBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
                    type: boolean
                  jdbcTreatTimestampNtzAsUtc:
                    description: |-
                      (Boolean) Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs.
                      Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check [JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
                    type: boolean
                  jdbcUseSessionTimezone:
                    description: |-
                      (Boolean) Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the TIMEZONE parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check JDBC_USE_SESSION_TIMEZONE docs.
                      Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC_USE_SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
                    type: boolean
                  jsonIndent:
                    description: |-
                      (Number) Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check JSON_INDENT docs.
                      Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
                    type: number
                  lockTimeout:
                    description: |-
                      (Number) Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check LOCK_TIMEOUT docs.
                      Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
                    type: number
                  logLevel:
                    description: |-
                      (String) Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see Setting log level. For more information, check LOG_LEVEL docs.
                      Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting log level](https://docs.snowflake.com/en/developer-guide/logging-tracing/logging-log-level). For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
                    type: string
                  loginNameSecretRef:
                    description: |-
                      insensitive.
                      The name users use to log in. If not supplied, snowflake will use name instead. Login names are always case-insensitive.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  minsToUnlock:
                    description: |-
                      uses special value that cannot be set in the configuration manually (-1)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. Note because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. **Note** because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                    type: number
                  multiStatementCount:
                    description: |-
                      statement capability. For more information, check MULTI_STATEMENT_COUNT docs.
                      Number of statements to execute when using the multi-statement capability. For more information, check [MULTI_STATEMENT_COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
                    type: number
                  name:
                    description: |-
                      (String) Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the docs. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
                      Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the [docs](https://docs.snowflake.net/manuals/sql-reference/sql/create-user.html#required-parameters). Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
                    type: string
                  networkPolicy:
                    description: |-
                      (String) Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see Controlling network traffic with network policies. Any existing network policy (created using CREATE NETWORK POLICY). For more information, check NETWORK_POLICY docs.
                      Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Any existing network policy (created using [CREATE NETWORK POLICY](https://docs.snowflake.com/en/sql-reference/sql/create-network-policy)). For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
                    type: string
                  noorderSequenceAsDefault:
                    description: |-
                      incremented column in increasing or decreasing order. For more information, check NOORDER_SEQUENCE_AS_DEFAULT docs.
                      Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER_SEQUENCE_AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
                    type: boolean
                  odbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how ODBC processes columns that have a scale of zero (0). For more information, check ODBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
                    type: boolean
                  preventUnloadToInternalStages:
                    description: |-
                      (Boolean) Specifies whether to prevent data unload operations to internal (Snowflake) stages using COPY INTO  statements. For more information, check PREVENT_UNLOAD_TO_INTERNAL_STAGES docs.
                      Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO <location>](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT_UNLOAD_TO_INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
                    type: boolean
                  queryTag:
                    description: |-
                      (String) Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the QUERY_HISTORY, QUERY_HISTORY_BY_* functions. For more information, check QUERY_TAG docs.
                      Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY_HISTORY, QUERY_HISTORY_BY_*](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
                    type: string
                  quotedIdentifiersIgnoreCase:
                    description: |-
                      quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see Identifier resolution). You can use this parameter in situations in which third-party applications always use double quotes around identifiers. For more information, check QUOTED_IDENTIFIERS_IGNORE_CASE docs.
                      Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED_IDENTIFIERS_IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
                    type: boolean
                  rowsPerResultset:
                    description: |-
                      (Number) Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check ROWS_PER_RESULTSET docs.
                      Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS_PER_RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
                    type: number
                  rsaPublicKey:
                    description: |-
                      pair authentication. Must be on 1 line without header and trailer.
                      Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
                    type: string
                  rsaPublicKey2:
                    description: |-
                      pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                      Specifies the user’s second RSA public key; used to rotate the public and private keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                    type: string
                  s3StageVpceDnsName:
                    description: |-
                      (String) Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via AWS PrivateLink for Amazon S3 use this endpoint to connect. For more information, see Accessing Internal stages with dedicated interface endpoints. For more information, check S3_STAGE_VPCE_DNS_NAME docs.
                      Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3_STAGE_VPCE_DNS_NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
                    type: string
                  searchPath:
                    description: |-
                      separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check SEARCH_PATH docs.
                      Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
                    type: string
                  simulatedDataSharingConsumer:
                    description: |-
                      (String) Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see Introduction to Secure Data Sharing and Working with shares. For more information, check SIMULATED_DATA_SHARING_CONSUMER docs.
                      Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see [Introduction to Secure Data Sharing](https://docs.snowflake.com/en/user-guide/data-sharing-intro) and [Working with shares](https://docs.snowflake.com/en/user-guide/data-sharing-provider). For more information, check [SIMULATED_DATA_SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
                    type: string
                  statementQueuedTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the MAX_CONCURRENCY_LEVEL parameter to ensure a warehouse is never backlogged. For more information, check STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX_CONCURRENCY_LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
                    type: number
                  statementTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check STATEMENT_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
                    type: number
                  strictJsonOutput:
                    description: |-
                      standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check STRICT_JSON_OUTPUT docs.
                      This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT_JSON_OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
                    type: boolean
                  timeInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIME data type. For more information, see Date and time input and output formats. Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check TIME_INPUT_FORMAT docs.
                      Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
                    type: string
                  timeOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIME data type. For more information, see Date and time input and output formats. For more information, check TIME_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
                    type: string
                  timestampDayIsAlways24H:
                    description: |-
                      (Boolean) Specifies whether the DATEADD function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check TIMESTAMP_DAY_IS_ALWAYS_24H docs.
                      Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP_DAY_IS_ALWAYS_24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
                    type: boolean
                  timestampInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check TIMESTAMP_INPUT_FORMAT docs.
                      Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
                    type: string
                  timestampLtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_LTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_LTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
                    type: string
                  timestampNtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check TIMESTAMP_NTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check [TIMESTAMP_NTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
                    type: string
                  timestampOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
                    type: string
                  timestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check [TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
                    type: string
                  timestampTzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_TZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_TZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
                    type: string
                  timezone:
                    description: |-
                      (String) Specifies the time zone for the session. You can specify a time zone name or a link name from release 2021a of the IANA Time Zone Database (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check TIMEZONE docs.
                      Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
                    type: string
                  traceLevel:
                    description: |-
                      (String) Controls how trace events are ingested into the event table. For more information about trace levels, see Setting trace level. For more information, check TRACE_LEVEL docs.
                      Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
                    type: string
                  transactionAbortOnError:
                    description: |-
                      autocommit transaction returns with an error. For more information, check TRANSACTION_ABORT_ON_ERROR docs.
                      Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION_ABORT_ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
                    type: boolean
                  transactionDefaultIsolationLevel:
                    description: |-
                      (String) Specifies the isolation level for transactions in the user session. For more information, check TRANSACTION_DEFAULT_ISOLATION_LEVEL docs.
                      Specifies the isolation level for transactions in the user session. For more information, check [TRANSACTION_DEFAULT_ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
                    type: string
                  twoDigitCenturyStart:
                    description: |-
                      digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the YY date format component (i.e. years represented as 2 digits). For more information, check TWO_DIGIT_CENTURY_START docs.
                      Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO_DIGIT_CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
                    type: number
                  unsupportedDdlAction:
                    description: |-
                      default) value specified for a constraint property returns an error. For more information, check UNSUPPORTED_DDL_ACTION docs.
                      Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED_DDL_ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
                    type: string
                  useCachedResult:
                    description: |-
                      (Boolean) Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check USE_CACHED_RESULT docs.
                      Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE_CACHED_RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
                    type: boolean
                  weekOfYearPolicy:
                    description: |-
                      (Number) Specifies how the weeks in a given year are computed. 0: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. 1: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check WEEK_OF_YEAR_POLICY docs.
                      Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK_OF_YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
                    type: number
                  weekStart:
                    description: |-
                      related date functions). 0: Legacy Snowflake behavior is used (i.e. ISO-like semantics). 1 (Monday) to 7 (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check WEEK_START docs.
                      Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  abortDetachedQuery:
                    description: |-
                      progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check ABORT_DETACHED_QUERY docs.
                      Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT_DETACHED_QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
                    type: boolean
                  autocommit:
                    description: |-
                      (Boolean) Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see Transactions. For more information, check AUTOCOMMIT docs.
                      Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
                    type: boolean
                  binaryInputFormat:
                    description: |-
                      to-BINARY conversion functions. For more information, see Binary input and output. For more information, check BINARY_INPUT_FORMAT docs.
                      The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
                    type: string
                  binaryOutputFormat:
                    description: |-
                      to-VARCHAR conversion functions. For more information, see Binary input and output. For more information, check BINARY_OUTPUT_FORMAT docs.
                      The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). For more information, check [BINARY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
                    type: string
                  clientMemoryLimit:
                    description: |-
                      (Number) Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check CLIENT_MEMORY_LIMIT docs.
                      Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT_MEMORY_LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
                    type: number
                  clientMetadataRequestUseConnectionCtx:
                    description: |-
                      (Boolean) For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs.
                      For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
                    type: boolean
                  clientPrefetchThreads:
                    description: |-
                      fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check CLIENT_PREFETCH_THREADS docs.
                      Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT_PREFETCH_THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
                    type: number
                  clientResultChunkSize:
                    description: |-
                      (Number) Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check CLIENT_RESULT_CHUNK_SIZE docs.
                      Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT_RESULT_CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
                    type: number
                  clientResultColumnCaseInsensitive:
                    description: |-
                      insensitively in ResultSet.get* methods in JDBC. For more information, check CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs.
                      Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT_RESULT_COLUMN_CASE_INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
                    type: boolean
                  clientSessionKeepAlive:
                    description: |-
                      (Boolean) Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check CLIENT_SESSION_KEEP_ALIVE docs.
                      Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
                    type: boolean
                  clientSessionKeepAliveHeartbeatFrequency:
                    description: |-
                      between client attempts to update the token for the session. For more information, check CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs.
                      Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
                    type: number
                  clientTimestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check CLIENT_TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. For more information, check [CLIENT_TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
                    type: string
                  comment:
                    description: |-
                      (String) Specifies a comment for the user.
                      Specifies a comment for the user.
                    type: string
                  dateInputFormat:
                    description: |-
                      (String) Specifies the input format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_INPUT_FORMAT docs.
                      Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
                    type: string
                  dateOutputFormat:
                    description: |-
                      (String) Specifies the display format for the DATE data type. For more information, see Date and time input and output formats. For more information, check DATE_OUTPUT_FORMAT docs.
                      Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
                    type: string
                  daysToExpiry:
                    description: Specifies the number of days after which the user
                      status is set to `Expired` and the user is no longer allowed
                      to log in. This is useful for defining temporary users (i.e.
                      users who should only have access to Snowflake for a limited
                      time period). In general, you should not set this property for
                      [account administrators](https://docs.snowflake.com/en/user-guide/security-access-control-considerations.html#label-accountadmin-users)
                      (i.e. users with the `ACCOUNTADMIN` role) because Snowflake
                      locks them out when they become `Expired`. External changes
                      for this field won't be detected.
                    type: number
                  defaultNamespace:
                    description: |-
                      (String) Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                      Specifies the namespace (database only or database and schema) that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the namespace exists.
                    type: string
                  defaultRole:
                    description: |-
                      (String) Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does not grant the role to the user. The role must be granted explicitly to the user using the GRANT ROLE command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see docs.
                      Specifies the role that is active by default for the user’s session upon login. Note that specifying a default role for a user does **not** grant the role to the user. The role must be granted explicitly to the user using the [GRANT ROLE](https://docs.snowflake.com/en/sql-reference/sql/grant-role) command. In addition, the CREATE USER operation does not verify that the role exists. For more information about this resource, see [docs](./account_role).
                    type: string
                  defaultSecondaryRolesOption:
                    description: |-
                      insensitive): DEFAULT | NONE | ALL. More information can be found in doc.
                      (Default: `DEFAULT`) Specifies the secondary roles that are active for the user’s session upon login. Valid values are (case-insensitive): `DEFAULT` | `NONE` | `ALL`. More information can be found in [doc](https://docs.snowflake.com/en/sql-reference/sql/create-user#optional-object-properties-objectproperties).
                    type: string
                  defaultWarehouse:
                    description: |-
                      (String) Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see docs.
                      Specifies the virtual warehouse that is active by default for the user’s session upon login. Note that the CREATE USER operation does not verify that the warehouse exists. For more information about this resource, see [docs](./warehouse).
                    type: string
                  disabled:
                    description: |-
                      uses special value that cannot be set in the configuration manually (default)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the user is disabled, which prevents logging in and aborts all the currently-running queries for the user. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
                    type: string
                  displayName:
                    description: |-
                      (String) Name displayed for the user in the Snowflake web interface.
                      Name displayed for the user in the Snowflake web interface.
                    type: string
                  enableUnloadPhysicalTypeOptimization:
                    description: |-
                      (Boolean) Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs.
                      Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
                    type: boolean
                  enableUnredactedQuerySyntaxError:
                    description: |-
                      (Boolean) Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs.
                      Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If `FALSE`, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter. When using the ALTER USER command to set the parameter to `TRUE` for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
                    type: boolean
                  errorOnNondeterministicMerge:
                    description: |-
                      (Boolean) Specifies whether to return an error when the MERGE command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_MERGE docs.
                      Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
                    type: boolean
                  errorOnNondeterministicUpdate:
                    description: |-
                      (Boolean) Specifies whether to return an error when the UPDATE command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check ERROR_ON_NONDETERMINISTIC_UPDATE docs.
                      Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR_ON_NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
                    type: boolean
                  fullyQualifiedName:
                    description: |-
                      (String) Fully qualified name of the resource. For more information, see object name resolution.
                      Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
                    type: string
                  geographyOutputFormat:
                    description: |-
                      (String) Display format for GEOGRAPHY values. For more information, check GEOGRAPHY_OUTPUT_FORMAT docs.
                      Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). For more information, check [GEOGRAPHY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
                    type: string
                  geometryOutputFormat:
                    description: |-
                      (String) Display format for GEOMETRY values. For more information, check GEOMETRY_OUTPUT_FORMAT docs.
                      Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). For more information, check [GEOMETRY_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  jdbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how JDBC processes columns that have a scale of zero (0). For more information, check JDBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
                    type: boolean
                  jdbcTreatTimestampNtzAsUtc:
                    description: |-
                      (Boolean) Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs.
                      Specifies how JDBC processes TIMESTAMP_NTZ values. For more information, check [JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
                    type: boolean
                  jdbcUseSessionTimezone:
                    description: |-
                      (Boolean) Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the TIMEZONE parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check JDBC_USE_SESSION_TIMEZONE docs.
                      Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC_USE_SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
                    type: boolean
                  jsonIndent:
                    description: |-
                      (Number) Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check JSON_INDENT docs.
                      Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
                    type: number
                  lockTimeout:
                    description: |-
                      (Number) Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check LOCK_TIMEOUT docs.
                      Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
                    type: number
                  logLevel:
                    description: |-
                      (String) Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see Setting log level. For more information, check LOG_LEVEL docs.
                      Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting log level](https://docs.snowflake.com/en/developer-guide/logging-tracing/logging-log-level). For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
                    type: string
                  minsToUnlock:
                    description: |-
                      uses special value that cannot be set in the configuration manually (-1)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. Note because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                      (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login, Snowflake places a temporary lock on a user after five consecutive unsuccessful login attempts. When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes. To remove a lock immediately for a user, specify a value of 0 for this parameter. **Note** because this value changes continuously after setting it, the provider is currently NOT handling the external changes to it. External changes for this field won't be detected.
                    type: number
                  multiStatementCount:
                    description: |-
                      statement capability. For more information, check MULTI_STATEMENT_COUNT docs.
                      Number of statements to execute when using the multi-statement capability. For more information, check [MULTI_STATEMENT_COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
                    type: number
                  name:
                    description: |-
                      (String) Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the docs. Due to technical limitations (read more here), avoid using the following characters: |, ., ".
                      Name of the user. Note that if you do not supply login_name this will be used as login_name. Check the [docs](https://docs.snowflake.net/manuals/sql-reference/sql/create-user.html#required-parameters). Due to technical limitations (read more [here](../guides/identifiers_rework_design_decisions#known-limitations-and-identifier-recommendations)), avoid using the following characters: `|`, `.`, `"`.
                    type: string
                  networkPolicy:
                    description: |-
                      (String) Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see Controlling network traffic with network policies. Any existing network policy (created using CREATE NETWORK POLICY). For more information, check NETWORK_POLICY docs.
                      Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Any existing network policy (created using [CREATE NETWORK POLICY](https://docs.snowflake.com/en/sql-reference/sql/create-network-policy)). For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
                    type: string
                  noorderSequenceAsDefault:
                    description: |-
                      incremented column in increasing or decreasing order. For more information, check NOORDER_SEQUENCE_AS_DEFAULT docs.
                      Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER_SEQUENCE_AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
                    type: boolean
                  odbcTreatDecimalAsInt:
                    description: |-
                      (Boolean) Specifies how ODBC processes columns that have a scale of zero (0). For more information, check ODBC_TREAT_DECIMAL_AS_INT docs.
                      Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC_TREAT_DECIMAL_AS_INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
                    type: boolean
                  parameters:
                    description: |-
                      (List of Object) Outputs the result of SHOW PARAMETERS IN USER for the given user. (see below for nested schema)
                      Outputs the result of `SHOW PARAMETERS IN USER` for the given user.
                    items:
                      properties:
                        abortDetachedQuery:
                          description: progress queries if connectivity is lost due
                            to abrupt termination of a session (e.g. network outage,
                            browser termination, service interruption). For more information,
                            check ABORT_DETACHED_QUERY docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        autocommit:
                          description: (Boolean) Specifies whether autocommit is enabled
                            for the session. Autocommit determines whether a DML statement,
                            when executed without an active transaction, is automatically
                            committed after the statement successfully completes.
                            For more information, see Transactions. For more information,
                            check AUTOCOMMIT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        binaryInputFormat:
                          description: to-BINARY conversion functions. For more information,
                            see Binary input and output. For more information, check
                            BINARY_INPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        binaryOutputFormat:
                          description: to-VARCHAR conversion functions. For more information,
                            see Binary input and output. For more information, check
                            BINARY_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientMemoryLimit:
                          description: (Number) Parameter that specifies the maximum
                            amount of memory the JDBC driver or ODBC driver should
                            use for the result set from queries (in MB). For more
                            information, check CLIENT_MEMORY_LIMIT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientMetadataRequestUseConnectionCtx:
                          description: (Boolean) For specific ODBC functions and JDBC
                            methods, this parameter can change the default search
                            scope from all databases/schemas to the current database/schema.
                            The narrower search typically returns fewer rows and executes
                            more quickly. For more information, check CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientPrefetchThreads:
                          description: fetch large result sets. The driver will attempt
                            to honor the parameter value, but defines the minimum
                            and maximum values (depending on your system’s resources)
                            to improve performance. For more information, check CLIENT_PREFETCH_THREADS
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientResultChunkSize:
                          description: (Number) Parameter that specifies the maximum
                            size of each set (or chunk) of query results to download
                            (in MB). The JDBC driver downloads query results in chunks.
                            For more information, check CLIENT_RESULT_CHUNK_SIZE docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientResultColumnCaseInsensitive:
                          description: insensitively in ResultSet.get* methods in
                            JDBC. For more information, check CLIENT_RESULT_COLUMN_CASE_INSENSITIVE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientSessionKeepAlive:
                          description: (Boolean) Parameter that indicates whether
                            to force a user to log in again after a period of inactivity
                            in the session. For more information, check CLIENT_SESSION_KEEP_ALIVE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientSessionKeepAliveHeartbeatFrequency:
                          description: between client attempts to update the token
                            for the session. For more information, check CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        clientTimestampTypeMapping:
                          description: (String) Specifies the TIMESTAMP_* variation
                            to use when binding timestamp variables for JDBC or ODBC
                            applications that use the bind API to load data. For more
                            information, check CLIENT_TIMESTAMP_TYPE_MAPPING docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        dateInputFormat:
                          description: (String) Specifies the input format for the
                            DATE data type. For more information, see Date and time
                            input and output formats. For more information, check
                            DATE_INPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        dateOutputFormat:
                          description: (String) Specifies the display format for the
                            DATE data type. For more information, see Date and time
                            input and output formats. For more information, check
                            DATE_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        enableUnloadPhysicalTypeOptimization:
                          description: (Boolean) Specifies whether to set the schema
                            for unloaded Parquet files based on the logical column
                            data types (i.e. the types in the unload SQL query or
                            source table) or on the unloaded column values (i.e. the
                            smallest data types and precision that support the values
                            in the output columns of the unload SQL statement or source
                            table). For more information, check ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        enableUnredactedQuerySyntaxError:
                          description: (Boolean) Controls whether query text is redacted
                            if a SQL query fails due to a syntax or parsing error.
                            If FALSE, the content of a failed query is redacted in
                            the views, pages, and functions that provide a query history.
                            Only users with a role that is granted or inherits the
                            AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR
                            parameter. When using the ALTER USER command to set the
                            parameter to TRUE for a particular user, modify the user
                            that you want to see the query text, not the user who
                            executed the query (if those are different users). For
                            more information, check ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        errorOnNondeterministicMerge:
                          description: (Boolean) Specifies whether to return an error
                            when the MERGE command is used to update or delete a target
                            row that joins multiple source rows and the system cannot
                            determine the action to perform on the target row. For
                            more information, check ERROR_ON_NONDETERMINISTIC_MERGE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        errorOnNondeterministicUpdate:
                          description: (Boolean) Specifies whether to return an error
                            when the UPDATE command is used to update a target row
                            that joins multiple source rows and the system cannot
                            determine the action to perform on the target row. For
                            more information, check ERROR_ON_NONDETERMINISTIC_UPDATE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        geographyOutputFormat:
                          description: (String) Display format for GEOGRAPHY values.
                            For more information, check GEOGRAPHY_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        geometryOutputFormat:
                          description: (String) Display format for GEOMETRY values.
                            For more information, check GEOMETRY_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        jdbcTreatDecimalAsInt:
                          description: (Boolean) Specifies how JDBC processes columns
                            that have a scale of zero (0). For more information, check
                            JDBC_TREAT_DECIMAL_AS_INT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        jdbcTreatTimestampNtzAsUtc:
                          description: (Boolean) Specifies how JDBC processes TIMESTAMP_NTZ
                            values. For more information, check JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        jdbcUseSessionTimezone:
                          description: (Boolean) Specifies whether the JDBC Driver
                            uses the time zone of the JVM or the time zone of the
                            session (specified by the TIMEZONE parameter) for the
                            getDate(), getTime(), and getTimestamp() methods of the
                            ResultSet class. For more information, check JDBC_USE_SESSION_TIMEZONE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        jsonIndent:
                          description: (Number) Specifies the number of blank spaces
                            to indent each new element in JSON output in the session.
                            Also specifies whether to insert newline characters after
                            each element. For more information, check JSON_INDENT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        lockTimeout:
                          description: (Number) Number of seconds to wait while trying
                            to lock a resource, before timing out and aborting the
                            statement. For more information, check LOCK_TIMEOUT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        logLevel:
                          description: (String) Specifies the severity level of messages
                            that should be ingested and made available in the active
                            event table. Messages at the specified level (and at more
                            severe levels) are ingested. For more information about
                            log levels, see Setting log level. For more information,
                            check LOG_LEVEL docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        multiStatementCount:
                          description: statement capability. For more information,
                            check MULTI_STATEMENT_COUNT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        networkPolicy:
                          description: (String) Specifies the network policy to enforce
                            for your account. Network policies enable restricting
                            access to your account based on users’ IP address. For
                            more details, see Controlling network traffic with network
                            policies. Any existing network policy (created using CREATE
                            NETWORK POLICY). For more information, check NETWORK_POLICY
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        noorderSequenceAsDefault:
                          description: incremented column in increasing or decreasing
                            order. For more information, check NOORDER_SEQUENCE_AS_DEFAULT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        odbcTreatDecimalAsInt:
                          description: (Boolean) Specifies how ODBC processes columns
                            that have a scale of zero (0). For more information, check
                            ODBC_TREAT_DECIMAL_AS_INT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        preventUnloadToInternalStages:
                          description: (Boolean) Specifies whether to prevent data
                            unload operations to internal (Snowflake) stages using
                            COPY INTO  statements. For more information, check PREVENT_UNLOAD_TO_INTERNAL_STAGES
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        queryTag:
                          description: (String) Optional string that can be used to
                            tag queries and other SQL statements executed within a
                            session. The tags are displayed in the output of the QUERY_HISTORY,
                            QUERY_HISTORY_BY_* functions. For more information, check
                            QUERY_TAG docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        quotedIdentifiersIgnoreCase:
                          description: quoted object identifiers are stored and resolved
                            as uppercase letters. By default, Snowflake preserves
                            the case of alphabetic characters when storing and resolving
                            double-quoted identifiers (see Identifier resolution).
                            You can use this parameter in situations in which third-party
                            applications always use double quotes around identifiers.
                            For more information, check QUOTED_IDENTIFIERS_IGNORE_CASE
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        rowsPerResultset:
                          description: (Number) Specifies the maximum number of rows
                            returned in a result set. A value of 0 specifies no maximum.
                            For more information, check ROWS_PER_RESULTSET docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        s3StageVpceDnsName:
                          description: (String) Specifies the DNS name of an Amazon
                            S3 interface endpoint. Requests sent to the internal stage
                            of an account via AWS PrivateLink for Amazon S3 use this
                            endpoint to connect. For more information, see Accessing
                            Internal stages with dedicated interface endpoints. For
                            more information, check S3_STAGE_VPCE_DNS_NAME docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        searchPath:
                          description: separated list of identifiers. An identifier
                            can be a fully or partially qualified schema name. For
                            more information, check SEARCH_PATH docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        simulatedDataSharingConsumer:
                          description: (String) Specifies the name of a consumer account
                            to simulate for testing/validating shared data, particularly
                            shared secure views. When this parameter is set in a session,
                            shared views return rows as if executed in the specified
                            consumer account rather than the provider account. For
                            more information, see Introduction to Secure Data Sharing
                            and Working with shares. For more information, check SIMULATED_DATA_SHARING_CONSUMER
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        statementQueuedTimeoutInSeconds:
                          description: (Number) Amount of time, in seconds, a SQL
                            statement (query, DDL, DML, etc.) remains queued for a
                            warehouse before it is canceled by the system. This parameter
                            can be used in conjunction with the MAX_CONCURRENCY_LEVEL
                            parameter to ensure a warehouse is never backlogged. For
                            more information, check STATEMENT_QUEUED_TIMEOUT_IN_SECONDS
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        statementTimeoutInSeconds:
                          description: (Number) Amount of time, in seconds, after
                            which a running SQL statement (query, DDL, DML, etc.)
                            is canceled by the system. For more information, check
                            STATEMENT_TIMEOUT_IN_SECONDS docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        strictJsonOutput:
                          description: standard values; however, these non-standard
                            values might result in Snowflake outputting JSON that
                            is incompatible with other platforms and languages. This
                            parameter, when enabled, ensures that Snowflake outputs
                            valid/compatible JSON. For more information, check STRICT_JSON_OUTPUT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timeInputFormat:
                          description: (String) Specifies the input format for the
                            TIME data type. For more information, see Date and time
                            input and output formats. Any valid, supported time format
                            or AUTO (AUTO specifies that Snowflake attempts to automatically
                            detect the format of times stored in the system during
                            the session). For more information, check TIME_INPUT_FORMAT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timeOutputFormat:
                          description: (String) Specifies the display format for the
                            TIME data type. For more information, see Date and time
                            input and output formats. For more information, check
                            TIME_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampDayIsAlways24H:
                          description: (Boolean) Specifies whether the DATEADD function
                            (and its aliases) always consider a day to be exactly
                            24 hours for expressions that span multiple days. For
                            more information, check TIMESTAMP_DAY_IS_ALWAYS_24H docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampInputFormat:
                          description: (String) Specifies the input format for the
                            TIMESTAMP data type alias. For more information, see Date
                            and time input and output formats. Any valid, supported
                            timestamp format or AUTO (AUTO specifies that Snowflake
                            attempts to automatically detect the format of timestamps
                            stored in the system during the session). For more information,
                            check TIMESTAMP_INPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampLtzOutputFormat:
                          description: (String) Specifies the display format for the
                            TIMESTAMP_LTZ data type. If no format is specified, defaults
                            to TIMESTAMP_OUTPUT_FORMAT. For more information, see
                            Date and time input and output formats. For more information,
                            check TIMESTAMP_LTZ_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampNtzOutputFormat:
                          description: (String) Specifies the display format for the
                            TIMESTAMP_NTZ data type. For more information, check TIMESTAMP_NTZ_OUTPUT_FORMAT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampOutputFormat:
                          description: (String) Specifies the display format for the
                            TIMESTAMP data type alias. For more information, see Date
                            and time input and output formats. For more information,
                            check TIMESTAMP_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampTypeMapping:
                          description: (String) Specifies the TIMESTAMP_* variation
                            that the TIMESTAMP data type alias maps to. For more information,
                            check TIMESTAMP_TYPE_MAPPING docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timestampTzOutputFormat:
                          description: (String) Specifies the display format for the
                            TIMESTAMP_TZ data type. If no format is specified, defaults
                            to TIMESTAMP_OUTPUT_FORMAT. For more information, see
                            Date and time input and output formats. For more information,
                            check TIMESTAMP_TZ_OUTPUT_FORMAT docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        timezone:
                          description: (String) Specifies the time zone for the session.
                            You can specify a time zone name or a link name from release
                            2021a of the IANA Time Zone Database (e.g. America/Los_Angeles,
                            Europe/London, UTC, Etc/GMT, etc.). For more information,
                            check TIMEZONE docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        traceLevel:
                          description: (String) Controls how trace events are ingested
                            into the event table. For more information about trace
                            levels, see Setting trace level. For more information,
                            check TRACE_LEVEL docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        transactionAbortOnError:
                          description: autocommit transaction returns with an error.
                            For more information, check TRANSACTION_ABORT_ON_ERROR
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        transactionDefaultIsolationLevel:
                          description: (String) Specifies the isolation level for
                            transactions in the user session. For more information,
                            check TRANSACTION_DEFAULT_ISOLATION_LEVEL docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        twoDigitCenturyStart:
                          description: digit years (i.e. the earliest year such dates
                            can represent). This parameter prevents ambiguous dates
                            when importing or converting data with the YY date format
                            component (i.e. years represented as 2 digits). For more
                            information, check TWO_DIGIT_CENTURY_START docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        unsupportedDdlAction:
                          description: default) value specified for a constraint property
                            returns an error. For more information, check UNSUPPORTED_DDL_ACTION
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        useCachedResult:
                          description: (Boolean) Specifies whether to reuse persisted
                            query results, if available, when a matching query is
                            submitted. For more information, check USE_CACHED_RESULT
                            docs.
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        weekOfYearPolicy:
                          description: '(Number) Specifies how the weeks in a given
                            year are computed. 0: The semantics used are equivalent
                            to the ISO semantics, in which a week belongs to a given
                            year if at least 4 days of that week are in that year.
                            1: January 1 is included in the first week of the year
                            and December 31 is included in the last week of the year.
                            For more information, check WEEK_OF_YEAR_POLICY docs.'
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        weekStart:
                          description: 'related date functions). 0: Legacy Snowflake
                            behavior is used (i.e. ISO-like semantics). 1 (Monday)
                            to 7 (Sunday): All the week-related functions use weeks
                            that start on the specified day of the week. For more
                            information, check WEEK_START docs.'
                          items:
                            properties:
                              default:
                                description: (String)
                                type: string
                              description:
                                description: (String)
                                type: string
                              key:
                                description: (String)
                                type: string
                              level:
                                description: (String)
                                type: string
                              value:
                                description: (String)
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  preventUnloadToInternalStages:
                    description: |-
                      (Boolean) Specifies whether to prevent data unload operations to internal (Snowflake) stages using COPY INTO  statements. For more information, check PREVENT_UNLOAD_TO_INTERNAL_STAGES docs.
                      Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO <location>](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT_UNLOAD_TO_INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
                    type: boolean
                  queryTag:
                    description: |-
                      (String) Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the QUERY_HISTORY, QUERY_HISTORY_BY_* functions. For more information, check QUERY_TAG docs.
                      Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY_HISTORY, QUERY_HISTORY_BY_*](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
                    type: string
                  quotedIdentifiersIgnoreCase:
                    description: |-
                      quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see Identifier resolution). You can use this parameter in situations in which third-party applications always use double quotes around identifiers. For more information, check QUOTED_IDENTIFIERS_IGNORE_CASE docs.
                      Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED_IDENTIFIERS_IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
                    type: boolean
                  rowsPerResultset:
                    description: |-
                      (Number) Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check ROWS_PER_RESULTSET docs.
                      Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS_PER_RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
                    type: number
                  rsaPublicKey:
                    description: |-
                      pair authentication. Must be on 1 line without header and trailer.
                      Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
                    type: string
                  rsaPublicKey2:
                    description: |-
                      pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                      Specifies the user’s second RSA public key; used to rotate the public and private keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
                    type: string
                  s3StageVpceDnsName:
                    description: |-
                      (String) Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via AWS PrivateLink for Amazon S3 use this endpoint to connect. For more information, see Accessing Internal stages with dedicated interface endpoints. For more information, check S3_STAGE_VPCE_DNS_NAME docs.
                      Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3_STAGE_VPCE_DNS_NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
                    type: string
                  searchPath:
                    description: |-
                      separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check SEARCH_PATH docs.
                      Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
                    type: string
                  showOutput:
                    description: |-
                      (List of Object) Outputs the result of SHOW USER for the given user. (see below for nested schema)
                      Outputs the result of `SHOW USER` for the given user.
                    items:
                      properties:
                        comment:
                          description: (String) Specifies a comment for the user.
                          type: string
                        createdOn:
                          description: (String)
                          type: string
                        daysToExpiry:
                          type: string
                        defaultNamespace:
                          description: (String) Specifies the namespace (database
                            only or database and schema) that is active by default
                            for the user’s session upon login. Note that the CREATE
                            USER operation does not verify that the namespace exists.
                          type: string
                        defaultRole:
                          description: (String) Specifies the role that is active
                            by default for the user’s session upon login. Note that
                            specifying a default role for a user does not grant the
                            role to the user. The role must be granted explicitly
                            to the user using the GRANT ROLE command. In addition,
                            the CREATE USER operation does not verify that the role
                            exists. For more information about this resource, see
                            docs.
                          type: string
                        defaultSecondaryRoles:
                          description: (String)
                          type: string
                        defaultWarehouse:
                          description: (String) Specifies the virtual warehouse that
                            is active by default for the user’s session upon login.
                            Note that the CREATE USER operation does not verify that
                            the warehouse exists. For more information about this
                            resource, see docs.
                          type: string
                        disabled:
                          description: 'uses special value that cannot be set in the
                            configuration manually (default)) Specifies whether the
                            user is disabled, which prevents logging in and aborts
                            all the currently-running queries for the user. Available
                            options are: "true" or "false". When the value is not
                            set in the configuration the provider will put "default"
                            there which means to use the Snowflake default for this
                            value.'
                          type: boolean
                        displayName:
                          description: (String) Name displayed for the user in the
                            Snowflake web interface.
                          type: string
                        email:
                          description: (String, Sensitive) Email address for the user.
                          type: string
                        expiresAtTime:
                          description: (String)
                          type: string
                        extAuthnDuo:
                          description: (Boolean)
                          type: boolean
                        extAuthnUid:
                          description: (String)
                          type: string
                        firstName:
                          description: (String)
                          type: string
                        hasMfa:
                          description: (Boolean)
                          type: boolean
                        hasPassword:
                          description: (Boolean)
                          type: boolean
                        hasRsaPublicKey:
                          description: (Boolean)
                          type: boolean
                        lastName:
                          description: (String)
                          type: string
                        lastSuccessLogin:
                          description: (String)
                          type: string
                        lockedUntilTime:
                          description: (String)
                          type: string
                        loginName:
                          description: insensitive.
                          type: string
                        minsToBypassMfa:
                          description: (String)
                          type: string
                        minsToUnlock:
                          description: uses special value that cannot be set in the
                            configuration manually (-1)) Specifies the number of minutes
                            until the temporary lock on the user login is cleared.
                            To protect against unauthorized user login, Snowflake
                            places a temporary lock on a user after five consecutive
                            unsuccessful login attempts. When creating a user, this
                            property can be set to prevent them from logging in until
                            the specified amount of time passes. To remove a lock
                            immediately for a user, specify a value of 0 for this
                            parameter. Note because this value changes continuously
                            after setting it, the provider is currently NOT handling
                            the external changes to it. External changes for this
                            field won't be detected.
                          type: string
                        mustChangePassword:
                          description: (Boolean)
                          type: boolean
                        name:
                          description: '(String) Name of the user. Note that if you
                            do not supply login_name this will be used as login_name.
                            Check the docs. Due to technical limitations (read more
                            here), avoid using the following characters: |, ., ".'
                          type: string
                        owner:
                          description: (String)
                          type: string
                        snowflakeLock:
                          description: (Boolean)
                          type: boolean
                        type:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  simulatedDataSharingConsumer:
                    description: |-
                      (String) Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see Introduction to Secure Data Sharing and Working with shares. For more information, check SIMULATED_DATA_SHARING_CONSUMER docs.
                      Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, see [Introduction to Secure Data Sharing](https://docs.snowflake.com/en/user-guide/data-sharing-intro) and [Working with shares](https://docs.snowflake.com/en/user-guide/data-sharing-provider). For more information, check [SIMULATED_DATA_SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
                    type: string
                  statementQueuedTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the MAX_CONCURRENCY_LEVEL parameter to ensure a warehouse is never backlogged. For more information, check STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX_CONCURRENCY_LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT_QUEUED_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
                    type: number
                  statementTimeoutInSeconds:
                    description: |-
                      (Number) Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check STATEMENT_TIMEOUT_IN_SECONDS docs.
                      Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT_TIMEOUT_IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
                    type: number
                  strictJsonOutput:
                    description: |-
                      standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check STRICT_JSON_OUTPUT docs.
                      This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT_JSON_OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
                    type: boolean
                  timeInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIME data type. For more information, see Date and time input and output formats. Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check TIME_INPUT_FORMAT docs.
                      Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
                    type: string
                  timeOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIME data type. For more information, see Date and time input and output formats. For more information, check TIME_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
                    type: string
                  timestampDayIsAlways24H:
                    description: |-
                      (Boolean) Specifies whether the DATEADD function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check TIMESTAMP_DAY_IS_ALWAYS_24H docs.
                      Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP_DAY_IS_ALWAYS_24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
                    type: boolean
                  timestampInputFormat:
                    description: |-
                      (String) Specifies the input format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check TIMESTAMP_INPUT_FORMAT docs.
                      Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP_INPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
                    type: string
                  timestampLtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_LTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_LTZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_LTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
                    type: string
                  timestampNtzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check TIMESTAMP_NTZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_NTZ data type. For more information, check [TIMESTAMP_NTZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
                    type: string
                  timestampOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP data type alias. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
                    type: string
                  timestampTypeMapping:
                    description: |-
                      (String) Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check TIMESTAMP_TYPE_MAPPING docs.
                      Specifies the TIMESTAMP_* variation that the TIMESTAMP data type alias maps to. For more information, check [TIMESTAMP_TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
                    type: string
                  timestampTzOutputFormat:
                    description: |-
                      (String) Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to TIMESTAMP_OUTPUT_FORMAT. For more information, see Date and time input and output formats. For more information, check TIMESTAMP_TZ_OUTPUT_FORMAT docs.
                      Specifies the display format for the TIMESTAMP_TZ data type. If no format is specified, defaults to [TIMESTAMP_OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP_TZ_OUTPUT_FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
                    type: string
                  timezone:
                    description: |-
                      (String) Specifies the time zone for the session. You can specify a time zone name or a link name from release 2021a of the IANA Time Zone Database (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check TIMEZONE docs.
                      Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
                    type: string
                  traceLevel:
                    description: |-
                      (String) Controls how trace events are ingested into the event table. For more information about trace levels, see Setting trace level. For more information, check TRACE_LEVEL docs.
                      Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
                    type: string
                  transactionAbortOnError:
                    description: |-
                      autocommit transaction returns with an error. For more information, check TRANSACTION_ABORT_ON_ERROR docs.
                      Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION_ABORT_ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
                    type: boolean
                  transactionDefaultIsolationLevel:
                    description: |-
                      (String) Specifies the isolation level for transactions in the user session. For more information, check TRANSACTION_DEFAULT_ISOLATION_LEVEL docs.
                      Specifies the isolation level for transactions in the user session. For more information, check [TRANSACTION_DEFAULT_ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
                    type: string
                  twoDigitCenturyStart:
                    description: |-
                      digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the YY date format component (i.e. years represented as 2 digits). For more information, check TWO_DIGIT_CENTURY_START docs.
                      Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO_DIGIT_CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
                    type: number
                  unsupportedDdlAction:
                    description: |-
                      default) value specified for a constraint property returns an error. For more information, check UNSUPPORTED_DDL_ACTION docs.
                      Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED_DDL_ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
                    type: string
                  useCachedResult:
                    description: |-
                      (Boolean) Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check USE_CACHED_RESULT docs.
                      Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE_CACHED_RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
                    type: boolean
                  userType:
                    description: |-
                      (String) Specifies a type for the user.
                      Specifies a type for the user.
                    type: string
                  weekOfYearPolicy:
                    description: |-
                      (Number) Specifies how the weeks in a given year are computed. 0: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. 1: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check WEEK_OF_YEAR_POLICY docs.
                      Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK_OF_YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
                    type: number
                  weekStart:
                    description: |-
                      related date functions). 0: Legacy Snowflake behavior is used (i.e. ISO-like semantics). 1 (Monday) to 7 (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check WEEK_START docs.
                      Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
