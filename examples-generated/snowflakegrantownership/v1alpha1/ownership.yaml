apiVersion: snowflakegrantownership.crossplane.io/v1alpha1
kind: Ownership
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    accountRoleName: ${snowflake_role.test.name}
    "on":
    - objectName: '"${snowflake_database.test.name}"."${snowflake_schema.test.name}"'
      objectType: SCHEMA
    outboundPrivileges: COPY

---

apiVersion: snowflakeaccountrole.crossplane.io/v1alpha1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    name: role

---

apiVersion: snowflakedatabase.crossplane.io/v1alpha1
kind: Database
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    name: database

---

apiVersion: snowflakedatabaserole.crossplane.io/v1alpha1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    database: database
    name: test_database_role

---

apiVersion: snowflakegrantaccountrole.crossplane.io/v1alpha1
kind: AccountRole
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    roleName: role
    userName: username

---

apiVersion: snowflakeschema.crossplane.io/v1alpha1
kind: Schema
metadata:
  annotations:
    meta.upbound.io/example-id: snowflakegrantownership/v1alpha1/ownership
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    database: database
    name: schema
    provider: ${snowflake.secondary}
